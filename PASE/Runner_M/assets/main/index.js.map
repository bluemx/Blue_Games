{"version":3,"sources":["../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/ArbolSpawn.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/audioplayer.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/CambioEscena.ts","../file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/Detecta.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/InputManager.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/ManagerGame.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/moneda.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/MovimientoCubeta.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/Mute.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/pared.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/PlayerCollision.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/SpawnCoches.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/SpawnMonedas.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/SpawnPostes.ts","../file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/file:/C:/Users/Mau/Downloads/Telepeaje/runnercoches/PaseRunner/assets/script/SpawnTarjetas.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Vec3","_dec3","_dec4","Prefab","_dec5","CCFloat","_descriptor","_applyDecoratedDescriptor","_class2","_Component","ArbolSpawn","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","creando","index","_inheritsLoose","_proto","prototype","start","spawnarbol","this","randomRangeInt","node1","instantiate","arbol","position","posicionIzquieda","setParent","node","node2","node22","posicionDerecha","node4","update","deltaTime","scheduleOnce","timer","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","AudioClip","audioplayer","onLoad","getComponent","AudioSource","clip","ListaAudio","CCString","CambioEscena","cambio","_this2","director","preloadScene","name2","toString","completedCount","totalCount","item","error","asset","loadScene","Node","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","console","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","_dec6","Detecta","_descriptor5","sys","isMobile","mobile","listaFinal","PC","lista","botones","next","back","InputManager","_keyStates","Map","log","_instance","input","Input","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","event","set","keyCode","isKeyPressed","_InputManager$_instan","get","_dec7","ManagerGame","GO","puntos","_descriptor6","ListaNodos","gameover","audio","play","schedule","sumapuntos","suma","score","slowTime","listaSpawns","FinalScore","CCInteger","moneda","_dec8","CCBoolean","MovimientoCubeta","posY","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","derecha","izquierda","YaEntre","_descriptor12","prevMouseX","direction","_descriptor13","choque","nodeImage","getWorldPosition","Teclas","TOUCH_START","Touch","TOUCH_END","Stop","TOUCH_CANCEL","onDestroy","off","TOUCH_MOVE","state","suelta","Detener","limiteIzq","limiteDer","touch","loc","getUILocation","currentMouseX","getLocationX","setWorldPosition","NoTeclas","flechas","cambioMove","KeyCode","ARROW_LEFT","ARROW_RIGHT","transf","getPosition","targetPosition","mueve","moveDirection","normalize","scaleAndAdd","speed","lerpFactor","Math","pow","lerp","newPosition","SpriteFrame","Mute","toggleMute","audioSource","volume","cambiaSprite","muteButton","normalSprite","sprites","pressedSprite","pared","collider","Collider2D","Contact2DType","BEGIN_CONTACT","onContact","selfCollider","otherCollider","contact","destroy","PlayerCollision","group","enabled","BoxCollider2D","density","RigidBody2D","gravityScale","gamemanager","Sprite","spawncoches","SpawnCoches","deten","cochesOpacidad","valor","time","nombre","player","spriteFrame","children","colorS","r","g","b","timerbaja","Spawn","temp","listaprefab","node0","listaposiciones","index1","temp1","index2","temp2","index3","temp3","node3","reanuda","SpawnMonedas","Timer","spawnMonedas","prefab","listamonedas","SpawnPostes","spawnPostes","listapostes","SpawnTarjetas","listatarjetas"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, CCFloat, Component, instantiate, Node, Prefab, randomRangeInt, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ArbolSpawn')\r\nexport class ArbolSpawn extends Component {\r\n    @property(Vec3)\r\n    public posicionDerecha: Vec3 = new Vec3;\r\n    @property(Vec3)\r\n    public posicionIzquieda: Vec3 = new Vec3;\r\n    @property(Prefab)\r\n    public arbol : Prefab = null;\r\n    @property(CCFloat)\r\n    private timer: number = 1;\r\n\r\n    private creando : boolean = false;\r\n    private index : number = 0;\r\n    start() {\r\n       \r\n\r\n    }\r\n\r\n    spawnarbol(){\r\n\r\n        this.index = randomRangeInt(0,4);\r\n        switch(this.index){\r\n            case 0:\r\n                const node1 = instantiate(this.arbol);\r\n                node1.position = this.posicionIzquieda;\r\n                node1.setParent(this.node)\r\n                break;\r\n            case 1:  \r\n            \r\n            break;\r\n            case 2:\r\n                const node2 = instantiate(this.arbol);\r\n                node2.position = this.posicionIzquieda;\r\n                node2.setParent(this.node);\r\n\r\n                const node22 = instantiate(this.arbol);\r\n                node22.position = this.posicionDerecha;\r\n                node22.setParent(this.node)\r\n\r\n                break;\r\n\r\n            case 3: break;\r\n            case 4: \r\n            const node4 = instantiate(this.arbol);\r\n                node4.position = this.posicionDerecha;\r\n                node4.setParent(this.node)\r\n            break;\r\n\r\n           \r\n\r\n        }\r\n        this.creando=false;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n        if(!this.creando){\r\n            this.creando=true;\r\n            this.scheduleOnce(function(){\r\n\r\n                this.spawnarbol()\r\n            },this.timer)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, AudioClip, AudioSource, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('audioplayer')\r\nexport class audioplayer extends Component {\r\n    @property([AudioClip])\r\n    public ListaAudio : AudioClip [] = [];\r\n    \r\n\r\n    protected onLoad(): void {\r\n        this.node.getComponent(AudioSource).clip = this.ListaAudio[0];\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, director, SceneAsset, CCString } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CambioEscena')\r\nexport class CambioEscena extends Component {\r\n    @property(CCString)\r\n    public name2 : String = \"\";\r\n    onLoad() {\r\n        // Agrega un evento de clic al botón\r\n       \r\n       \r\n    }\r\n\r\n    //cc.director.preloadScene(\"table\", function () {\r\n    //    cc.log(\"Next scene preloaded\");\r\n    //});\r\n    cambio() {\r\n        // Cambia a la nueva escena (\"GameScene\" en este ejemplo)\r\n        //director.preloadScene(this.name2.toString());\r\n       /* director.preloadScene(this.name2.toString(), function() {\r\n            console.log(\"Next scene preloaded\");\r\n            director.loadScene(this.name2.toString());\r\n        });*/\r\nvar progress = 0;\r\n       director.preloadScene(this.name2.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n        progress = completedCount / totalCount;\r\n    }, (error: Error, asset: SceneAsset) => {\r\n        //do something after preloaded scene\r\n        director.loadScene(this.name2.toString());\r\n    });\r\n       \r\n    }\r\n}\r\n\r\n\r\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import { _decorator, Component, Node,sys, director, SceneAsset } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Detecta')\r\nexport class Detecta extends Component {\r\n\r\n    @property(Node)\r\n    public PC : Node = null;\r\n    @property(Node)\r\n    public mobile : Node = null;\r\n    @property([Node])\r\n    public lista: Node[] =[];\r\n    @property([Node])\r\n    public listaFinal: Node[] =[];\r\n    @property([Node])\r\n    public botones: Node[]=[];\r\n    public index: number = 0;\r\n\r\n\r\n\r\n   /* @property(String)\r\n    public PC : String = \"\";\r\n    @property(String)\r\n    public mobile : String = \"\";*/\r\n\r\n    /*onLoad() {\r\n        // Verifica si el juego se está ejecutando en un dispositivo móvil\r\n       if (sys.isMobile) {\r\n\r\n       \r\n            this.listaFinal[0]=this.mobile;\r\n        } else {\r\n            // Código para otras plataformas (por ejemplo, navegadores)\r\n            this.listaFinal[0]=this.PC;\r\n           \r\n        }\r\n        this.listaFinal[1]=this.lista[0];\r\n        this.listaFinal[2]=this.lista[1];\r\n    }*/\r\n\r\n    onLoad() {\r\n        // Verifica si el juego se está ejecutando en un dispositivo móvil\r\n        if (sys.isMobile) {\r\n\r\n            var progress = 0;\r\n       director.preloadScene(this.mobile.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n        progress = completedCount / totalCount;\r\n    }, (error: Error, asset: SceneAsset) => {\r\n        //do something after preloaded scene\r\n        director.loadScene(this.mobile.toString());\r\n    });\r\n            // Código específico para dispositivos móviles\r\n          // this.PC.active=false;\r\n           this.mobile.active=true;\r\n           this.listaFinal[0]=this.mobile;\r\n        } else {\r\n            // Código para otras plataformas (por ejemplo, navegadores)\r\n            this.PC.active=true;\r\n           //this.mobile.active=false;\r\n\r\n           this.listaFinal[0]=this.PC;\r\n           var progress = 0;\r\n       director.preloadScene(this.PC.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n        progress = completedCount / totalCount;\r\n    }, (error: Error, asset: SceneAsset) => {\r\n        //do something after preloaded scene\r\n        director.loadScene(this.PC.toString());\r\n    });\r\n        }\r\n\r\n        this.listaFinal[1]=this.lista[0];\r\n        //this.listaFinal[2]=this.lista[1];\r\n    }\r\n\r\n   \r\n\r\n\r\n    start() {\r\n\r\n        this.botones[1].active=false;\r\n\r\n    }\r\n    update (){\r\n\r\n        if(this.index==0)\r\n        {\r\n            this.botones[1].active=false;\r\n        }else\r\n        {\r\n            this.botones[1].active=true;\r\n        }\r\n\r\n        if(this.index==this.listaFinal.length-1)\r\n        {\r\n            this.botones[0].active=false;\r\n        }\r\n        else\r\n        {\r\n            this.botones[0].active=true;\r\n        }\r\n        \r\n    }\r\n\r\n    next()\r\n    {\r\n        if(this.index<this.listaFinal.length-1)\r\n        {\r\n            this.index++;\r\n\r\n            this.listaFinal[this.index].active=true;\r\n            this.listaFinal[this.index-1].active=false;\r\n           \r\n           \r\n        }\r\n       \r\n    }\r\n\r\n    back()\r\n    {\r\n        if(this.index>0)\r\n        {\r\n            this.index--;\r\n            this.listaFinal[this.index].active=true;\r\n            this.listaFinal[this.index+1].active=false;\r\n           \r\n        }\r\n\r\n    }\r\n\r\n\r\n   \r\n}","import { _decorator, Component, Node, Input, input, EventKeyboard, KeyCode } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputManager')\nexport class InputManager extends Component {\n    private static _instance: InputManager;\n    private _keyStates: Map<number, boolean> = new Map();\n    onLoad(){\n        console.log('INPUT MANAGER')\n       /* if(InputManager._instance){\n            this.destroy()\n            return;\n        }*/\n        InputManager._instance = this;\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n    private onKeyDown(event: EventKeyboard){\n        this._keyStates.set(event.keyCode, true)\n       // console.log(this._keyStates)\n    }\n    private onKeyUp(event: EventKeyboard){\n        this._keyStates.set(event.keyCode, false)\n    }\n    public static isKeyPressed(keyCode: number): boolean {\n        return !!InputManager._instance?._keyStates.get(keyCode)\n    }\n   \n\n   \n\n    \n}\n\n","import { _decorator, Component, Node, director, BoxCollider, Label, Director, AudioSource } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { audioplayer } from './audioplayer';\r\n\r\n@ccclass('ManagerGame')\r\nexport class ManagerGame extends Component {\r\n    @property(Node)\r\n    public gameover : Node = null;\r\n    public GO: boolean = false;\r\n    @property ([Node])\r\n    public listaSpawns : Node [] = [];\r\n    private puntos : number = 0;\r\n    @property(Label)\r\n    public score : Label = null;\r\n    @property(Label)\r\n    public FinalScore : Label = null;\r\n    @property([Node])\r\n    public ListaNodos: Node [] = [];\r\n    @property(AudioSource)\r\n    public audio : AudioSource = null;\r\n\r\n\r\n\r\n\r\n    protected onLoad(): void {\r\n        for(let i = 0; i < this.ListaNodos.length; i++){\r\n            this.ListaNodos[i].active=false;\r\n        }\r\n        this.gameover.active=false;\r\n        //director.pause();\r\n        this.scheduleOnce (function(){\r\n            this.ListaNodos[0].active=true;\r\n        },.2)\r\n        this.scheduleOnce(function(){\r\n            this.ListaNodos[1].active=true;\r\n        },.5)\r\n        this.scheduleOnce(function(){\r\n            this.ListaNodos[2].active=true;\r\n            this.audio.play();\r\n        },.8)\r\n    }\r\n    \r\n    start() {\r\n        this.schedule(function(){\r\n            this.sumapuntos(10);\r\n\r\n        },20)\r\n        \r\n\r\n    }\r\n    sumapuntos(suma:number){\r\n        this.puntos += suma;\r\n        this.score.string = this.puntos.toString();\r\n        this.audio.play();\r\n    }\r\n    slowTime(){\r\n        //director.getScheduler().setTimeScale(.5);\r\n        this.scheduleOnce(function(){\r\n            for(let i = 0 ; i < this.listaSpawns.length; i++)\r\n                {\r\n                    this.listaSpawns[i].active = false;\r\n                }\r\n                this.audio.getComponent(AudioSource).clip = this.audio.getComponent(audioplayer).ListaAudio[2];\r\n                this.audio.play();\r\n            this.gameover.active=true;\r\n            this.FinalScore.string=this.score.string;\r\n        },1)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n        if(this.GO)\r\n            {\r\n                this.GO=false;\r\n                this.slowTime();\r\n            }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCInteger, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('moneda')\r\nexport class moneda extends Component {\r\n    @property(CCInteger)\r\n    public valor : number = 0;\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Input, EventTouch, Vec3, NodeEventType, KeyCode, input, AnimationClip, Animation, CCBoolean } from 'cc';\r\nimport { InputManager } from './InputManager';\r\n//import { Animaciones } from './Animaciones';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MovimientoCubeta')\r\nexport class MovimientoCubeta extends Component {\r\n  \r\n\r\n    @property public limiteIzq:number = -300;\r\n    @property public limiteDer:number = 300;\r\n    @property(InputManager) public inputManager: InputManager;\r\n    @property(Node) nodeImage: Node=null;\r\n    public posY:Vec3;\r\n\r\n    @property\r\n    public speed: number = 500;\r\n    @property(Vec3)\r\n    public targetPosition: Vec3 = new Vec3();\r\n    @property(Vec3)\r\n    public moveDirection: Vec3 = new Vec3();\r\n    @property(Vec3)\r\n    public newPosition: Vec3 = new Vec3();\r\n\r\n    @property public flechas:boolean=false;\r\n    @property public touch:  boolean = false;\r\n    @property(Vec3) public transf: Vec3 = null;\r\n\r\n    private derecha:boolean;\r\n    private izquierda:boolean;\r\n    public YaEntre: boolean;\r\n\r\n    @property public state: string = \"otro\";\r\n    private prevMouseX: number = 0;\r\n    private direction: number = 0;\r\n    @property(CCBoolean)\r\n    public choque: boolean=false;\r\n   \r\n\r\n    onLoad(){\r\n        this.choque = false;\r\n        this.derecha = false;\r\n        this.izquierda = false;\r\n        this.YaEntre=false;\r\n        //this.anim= this.getComponent(Animaciones);\r\n       // this.animation = this.node.getComponentInChildren(Animation)\r\n        //this.anim.IDLE();\r\n        this.posY=this.nodeImage.getWorldPosition();\r\n\r\n       \r\n        input.on(Input.EventType.KEY_DOWN, this.Teclas,this);\r\n        console.log(\"cargando flechas\")\r\n       \r\n        \r\n        this.nodeImage.on(Input.EventType.TOUCH_START,this.Touch,this)\r\n\r\n        this.nodeImage.on(Input.EventType.TOUCH_END,this.Stop,this)\r\n        this.nodeImage.on(Input.EventType.TOUCH_CANCEL,this.Stop,this)\r\n        /*this.nodeImage.on(Node.EventType.TOUCH_MOVE,(event:EventTouch)=>{\r\n            let loc=event.getLocation();\r\n            \r\n            this.nodeImage.setWorldPosition(new Vec3(loc.x, this.posY.y, 0));\r\n            \r\n        })\r\n\r\n        this.nodeImage.on(Node.EventType.TOUCH_END,(event:EventTouch)=>{\r\n\r\n        })\r\n\r\n        this.nodeImage.on(Node.EventType.TOUCH_CANCEL,(event:EventTouch)=>{\r\n            \r\n        })*/\r\n\r\n       \r\n       \r\n    }\r\n\r\n    onDestroy() {\r\n        // Desregistrar eventos al destruir el componente\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this.Touch, this);\r\n        \r\n\r\n    }\r\n\r\n    Stop()\r\n    {\r\n        this.YaEntre = false;\r\n        this.state=\"idle\";\r\n        console.log(\"regresa idle\");\r\n        \r\n        this.suelta();\r\n    }\r\n    Detener()\r\n    {\r\n        if(this.nodeImage.position.x<=this.limiteIzq)\r\n        {\r\n            this.nodeImage.setPosition(new Vec3(this.limiteIzq,-180,0));\r\n        }\r\n\r\n        if(this.nodeImage.position.x >=this.limiteDer)\r\n        {\r\n            this.nodeImage.setPosition(new Vec3(this.limiteDer,-180,0));\r\n        }\r\n\r\n       //this.anim.IDLE();\r\n    }\r\n    Touch()\r\n    {\r\n            this.nodeImage.on(Node.EventType.TOUCH_MOVE,(event:EventTouch)=>{\r\n                this.touch=true;\r\n                let loc=event.getUILocation();\r\n    \r\n                // Determinar la dirección del movimiento del mouse\r\n                const currentMouseX = event.getLocationX();\r\n                if (currentMouseX > this.prevMouseX) {\r\n                    this.direction = 1; // Movimiento hacia la derecha\r\n                    this.izquierda=false;\r\n                } else if (currentMouseX < this.prevMouseX) {\r\n                    this.direction = -1; // Movimiento hacia la izquierda\r\n                    this.derecha=false;\r\n    \r\n                }\r\n                this.nodeImage.setWorldPosition(new Vec3(loc.x, this.posY.y, 0));\r\n                this.prevMouseX = currentMouseX;\r\n            })\r\n\r\n       \r\n        \r\n    }\r\n\r\n    NoTeclas()\r\n    {\r\n        this.flechas=false;\r\n    }\r\n    Teclas()\r\n    {\r\n        console.log(\"flechas\")\r\n        this.flechas=true;\r\n        \r\n    }\r\n    cambioMove(){\r\n     if(this.touch){\r\n        \r\n                this.flechas = false;\r\n        }\r\n     if(InputManager.isKeyPressed(KeyCode.ARROW_LEFT)||InputManager.isKeyPressed(KeyCode.ARROW_RIGHT) ){\r\n    \r\n                this.flechas=true;\r\n                this.touch=false;\r\n        }\r\n    \r\n    }\r\n    suelta(){\r\n        this.transf=this.nodeImage.getPosition();\r\n        this.targetPosition=this.transf;\r\n        this.nodeImage.getPosition(this.transf);\r\n\r\n       \r\n    }\r\n    mueve(deltaTime){\r\n        this.cambioMove();\r\n        if(this.flechas){\r\n            \r\n            //console.log(\"flechas\");\r\n            this.moveDirection.x = 0\r\n            this.moveDirection.y = 0\r\n            if(InputManager.isKeyPressed(KeyCode.ARROW_LEFT))\r\n            {\r\n             this.moveDirection.x -= 1          \r\n             \r\n            }\r\n            if(InputManager.isKeyPressed(KeyCode.ARROW_RIGHT)){\r\n            this.moveDirection.x += 1           \r\n            }\r\n\r\n            if(!InputManager.isKeyPressed(KeyCode.ARROW_RIGHT)&&!InputManager.isKeyPressed(KeyCode.ARROW_LEFT))\r\n            {\r\n                this.YaEntre = false;\r\n                \r\n            }\r\n\r\n            ///*\r\n            //OPTIM\r\n            Vec3.normalize(this.moveDirection, (new Vec3 (this.moveDirection.x, 0,0)));\r\n            Vec3.scaleAndAdd(this.targetPosition, this.targetPosition, this.moveDirection, this.speed * deltaTime)\r\n            const lerpFactor = 1 - Math.pow(0.001, deltaTime);\r\n            Vec3.lerp(this.newPosition, new Vec3(this.nodeImage.position.x,-180,0), (new Vec3(this.targetPosition.x, -180, 0 )), lerpFactor);\r\n            this.nodeImage.setPosition(this.newPosition);\r\n        }\r\n        else{\r\n            \r\n        }      \r\n        this.Detener();\r\n    }\r\n\r\n   \r\n    update(deltaTime:number)\r\n    {\r\n        if(!this.choque)\r\n            {\r\n                this.mueve(deltaTime);\r\n            }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Button, AudioSource, SpriteFrame } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Mute')\r\nexport class Mute extends Component {\r\n\r\n    @property(Button)\r\n    public muteButton: Button=null;\r\n\r\n    @property(AudioSource)\r\n    public audioSource: AudioSource=null;\r\n\r\n    @property(SpriteFrame)\r\n    public sprites: SpriteFrame []=[];\r\n    onLoad() {\r\n        // Asigna la función a ejecutar cuando se hace clic en el botón\r\n        //this.muteButton.node.on('click', this.toggleMute, this);\r\n    }\r\n\r\n    toggleMute() {\r\n        // Verifica si el audio está actualmente silenciado\r\n        console.log(\"volume\");\r\n        // Establece el volumen de la música a 0 si está activado el sonido, o a 1 si está silenciado\r\n        if(this.audioSource.volume==0)\r\n        {\r\n           \r\n            console.log(\"volume 0\");\r\n            this.audioSource.volume=1;\r\n           \r\n        }\r\n        else\r\n        {\r\n            \r\n            console.log(\"volume 1\");\r\n            this.audioSource.volume=0;\r\n            \r\n        }\r\n        this.cambiaSprite();\r\n    }\r\n    cambiaSprite()\r\n    {\r\n        if(this.audioSource.volume==1)\r\n        {\r\n            this.muteButton.normalSprite=this.sprites[0];\r\n            this.muteButton.pressedSprite=this.sprites[1];\r\n        }\r\n        else if(this.audioSource.volume==0)\r\n        {\r\n            this.muteButton.normalSprite=this.sprites[1];\r\n            this.muteButton.pressedSprite=this.sprites[0];\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Contact2DType, Collider2D, IPhysics2DContact} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('pared')\r\nexport class pared extends Component {\r\n\r\n    protected onLoad(): void {\r\n        let collider=this.node.getComponent(Collider2D)\r\n\r\n        if(collider)\r\n        {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onContact,this)\r\n           // collider.on(Contact2DType.END_CONTACT,this.offContact,this)\r\n        }\r\n    }\r\n    start() {\r\n\r\n    }\r\n    onContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        console.log(\"choque con algo\");\r\n        \r\n        this.scheduleOnce(function(){\r\n                otherCollider.node.destroy();\r\n        },.5)\r\n   \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n","import { _decorator, Component, Node, Collider2D, Contact2DType, IPhysics2DContact, BoxCollider2D, RigidBody2D, UITransform, Sprite, AudioSource, SpriteFrame, color, Color } from 'cc';\r\nimport { ManagerGame } from './ManagerGame';\r\nimport { MovimientoCubeta } from './MovimientoCubeta';\r\nimport { moneda } from './moneda';\r\nimport { audioplayer } from './audioplayer';\r\nimport { SpawnCoches } from './SpawnCoches';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerCollision')\r\nexport class PlayerCollision extends Component {\r\n\r\n    @property(Node)\r\n    public gamemanager: Node = null;\r\n    @property (Node)\r\n    public spawncoches : Node = null;\r\n    protected onLoad(): void {\r\n        let collider=this.node.getComponent(Collider2D)\r\n\r\n        if(collider)\r\n        {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onContact,this)\r\n        }\r\n    }\r\n    start() {\r\n\r\n    }\r\n    onContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        console.log(otherCollider.group)\r\n        if(otherCollider.group == 4)\r\n            {\r\n                this.node.getComponent(AudioSource).clip = this.node.getComponent(audioplayer).ListaAudio[1];\r\n                this.node.getComponent(AudioSource).play();\r\n                this.node.getComponent(MovimientoCubeta).Stop();\r\n                this.node.getComponent(MovimientoCubeta).choque = true;\r\n                this.node.getComponent(MovimientoCubeta).enabled=false;\r\n                \r\n                otherCollider.getComponent(BoxCollider2D).density = .2;\r\n                otherCollider.getComponent(RigidBody2D).gravityScale = .2;\r\n                otherCollider.getComponent(BoxCollider2D).enabled=false;\r\n                this.gamemanager.getComponent(ManagerGame).GO = true;\r\n            }\r\n\r\n        if(otherCollider.group == 64){\r\n\r\n            otherCollider.node.getComponent(Sprite).enabled=false;\r\n            //this.node.getComponent(AudioSource).clip = this.node.getComponent(audioplayer).ListaAudio[0];\r\n            this.spawncoches.getComponent(SpawnCoches).deten=true;\r\n            this.spawncoches.getComponent(SpawnCoches).cochesOpacidad();\r\n           \r\n1\r\n            this.gamemanager.getComponent(ManagerGame).sumapuntos(otherCollider.node.getComponent(moneda).valor);\r\n            \r\n            this.scheduleOnce(function(){\r\n\r\n                otherCollider.node.destroy();\r\n\r\n\r\n            },.1)\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCString, Component, instantiate, Node, Prefab, randomRangeInt, Sprite, Vec3, Color, BoxCollider2D } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpawnCoches')\r\nexport class SpawnCoches extends Component {\r\n    @property([Prefab])\r\n    public listaprefab: Prefab [] = [];\r\n    @property([Vec3])\r\n    public listaposiciones :  Vec3 [] = [];\r\n    @property(CCString)\r\n    private nombre : string = \"\";\r\n    @property(Node)\r\n    public player : Node = null;\r\n\r\n    public deten: boolean =false;\r\n   \r\n    private timer :  number = 3;\r\n    private time : number = 0;\r\n    private creando : boolean = false;\r\n    private index : number = 0;\r\n    protected onLoad(): void {\r\n        this.nombre = this.player.getComponent(Sprite).spriteFrame.name.toString();\r\n        this.schedule(function () {\r\n            this.timer -= 0.2;\r\n            if (this.timer <= 0.6) {\r\n                this.timer = 0.6;\r\n                \r\n            }\r\n        },2)\r\n    }\r\n    start() {\r\n\r\n    }\r\n    cochesOpacidad(){\r\n        for(let i = 4; i < this.node.children.length; i++){\r\n            console.log(\"coloress\" + this.node.children.length);\r\n            let colorS = this.node.children[i].getComponent(Sprite).color;\r\n            console.log(colorS);\r\n            this.node.children[i].getComponent(BoxCollider2D).group= 128;\r\n            this.node.children[i].getComponent(Sprite).color = new Color( colorS.r, colorS.g, colorS.b, 60);\r\n        }\r\n    }\r\n    timerbaja(){\r\n            this.timer -= .2;\r\n            if(this.timer >= .3)\r\n                {\r\n                    this.timer = .3;\r\n                }\r\n    }\r\n    Spawn(){\r\n        this.index=randomRangeInt(0,4);\r\n        this.creando=false;\r\n\r\n        switch(this.index){\r\n            case 0: \r\n                    let index= randomRangeInt(0,11);\r\n                    const temp = instantiate(this.listaprefab[index]);\r\n                    if(temp.getComponent(Sprite).spriteFrame.name== this.nombre){\r\n                        index +=1;\r\n                        if(index+1 > 11){\r\n                            index = 0;\r\n                        }\r\n\r\n                        const node0 = instantiate(this.listaprefab[index]);\r\n                        node0.setParent(this.node);\r\n                        node0.setPosition(this.listaposiciones[0]);\r\n                    }\r\n                    else{\r\n                        const node0 = instantiate(this.listaprefab[index]);\r\n                        node0.setParent(this.node);\r\n                        node0.setPosition(this.listaposiciones[0]);\r\n                    }\r\n                    temp.destroy();\r\n                   \r\n            \r\n            break;\r\n            case 1: \r\n                    let index1= randomRangeInt(0,11);\r\n                    const temp1 =instantiate(this.listaprefab[index1]);\r\n                    if(temp1.getComponent(Sprite).spriteFrame.name== this.nombre){\r\n                        index1 +=1;\r\n                        if(index1+1 > 11){\r\n                            index1 = 0;\r\n                        }\r\n\r\n                        const node1 = instantiate(this.listaprefab[index1]);\r\n                        node1.setParent(this.node);\r\n                        node1.setPosition(this.listaposiciones[1]);\r\n                    }\r\n                    else{\r\n                        const node1 = instantiate(this.listaprefab[index1]);\r\n                        node1.setParent(this.node);\r\n                        node1.setPosition(this.listaposiciones[1]);\r\n                    }\r\n                    temp1.destroy();\r\n            \r\n            \r\n            break;\r\n            case 2: \r\n                    let index2= randomRangeInt(0,11);\r\n                    const temp2 =instantiate(this.listaprefab[index2]);\r\n                    if(temp2.getComponent(Sprite).spriteFrame.name== this.nombre){\r\n                        index2 +=1;\r\n                        if(index2+1 > 11){\r\n                            index2 = 0;\r\n                        }\r\n                        const node2 = instantiate(this.listaprefab[index2]);\r\n                        node2.setParent(this.node);\r\n                        node2.setPosition(this.listaposiciones[2]);\r\n                    }\r\n                    else{\r\n\r\n                        const node2 = instantiate(this.listaprefab[index2]);\r\n                        node2.setParent(this.node);\r\n                        node2.setPosition(this.listaposiciones[2]);\r\n                    }\r\n                    temp2.destroy();\r\n            \r\n            \r\n            break;\r\n            case 3: \r\n            let index3= randomRangeInt(0,11);\r\n            const temp3 =instantiate(this.listaprefab[index3]);\r\n            if(temp3.getComponent(Sprite).spriteFrame.name == this.nombre){\r\n                index3 +=1;\r\n                if(index3+1 > 11){\r\n                    index3 = 0;\r\n                }\r\n                const node3 = instantiate(this.listaprefab[index3]);\r\n                node3.setParent(this.node);\r\n                node3.setPosition(this.listaposiciones[3]);\r\n            }\r\n            else{\r\n\r\n                const node3 = instantiate(this.listaprefab[index3]);\r\n                node3.setParent(this.node);\r\n                node3.setPosition(this.listaposiciones[3]);\r\n            }\r\n            temp3.destroy();\r\n            \r\n            break;\r\n            case 4: \r\n            \r\n            break;\r\n        }\r\n\r\n\r\n    }\r\n    reanuda(){\r\n        this.time+=0.005;\r\n        if(this.time > 1)\r\n            {\r\n                this.time =0;\r\n                this.deten=false;\r\n            }\r\n        \r\n    }\r\n\r\n\r\n    update(deltaTime: number) {\r\n        \r\n        if(this.deten){\r\n            \r\n            this.reanuda();\r\n        }\r\n        else{\r\n            if(!this.creando){\r\n                this.creando=true;\r\n                this.scheduleOnce(function(){\r\n                    this.Spawn()\r\n                }, this.timer)\r\n            }\r\n\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, instantiate, Node, Prefab, randomRangeInt } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpawnMonedas')\r\nexport class SpawnMonedas extends Component {\r\n\r\n    @property([Node])\r\n    public listamonedas : Node [] = [] ;\r\n    \r\n    private creando : boolean = false;\r\n    private Timer : number = 2;\r\n    @property(Prefab)\r\n    public prefab : Prefab = null\r\n    private index : number = 0;\r\n    protected onLoad(): void {\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n    spawnMonedas(){\r\n        this.index = randomRangeInt(0,4)\r\n        switch(this.index){\r\n            case 0: \r\n                    const node = instantiate(this.prefab)\r\n                    node.setParent(this.node);\r\n                    node.setPosition(this.listamonedas[0].position);\r\n            break;\r\n            case 1: const node1 = instantiate(this.prefab);\r\n                    node1.setParent(this.node);\r\n                    node1.setPosition(this.listamonedas[1].position);\r\n                    break;\r\n            case 2: const node2 = instantiate(this.prefab);\r\n                    node2.setParent(this.node);\r\n                    node2.setPosition(this.listamonedas[2].position);\r\n                    break;\r\n            case 3: \r\n            const node3 = instantiate(this.prefab);\r\n                    node3.setParent(this.node);\r\n                    node3.setPosition(this.listamonedas[3].position);\r\n            break;\r\n            case 4: \r\n                    const node4 = instantiate(this.prefab);\r\n                    node4.setParent(this.node);\r\n                    node4.setPosition(this.listamonedas[4].position);\r\n            break;\r\n\r\n        }\r\n        this.creando=false;\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n        if(!this.creando){\r\n            this.creando=true;\r\n            this.scheduleOnce(function(){\r\n                this.spawnMonedas();\r\n            }, this.Timer);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, instantiate, Node, Prefab, randomRangeInt } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpawnPostes')\r\nexport class SpawnPostes extends Component {\r\n    @property([Prefab])\r\n    public listapostes: Prefab[] = [];\r\n    private timer: number = 10;\r\n    private creando: boolean = false;\r\n    private index : number = 0;\r\n\r\n    start() {\r\n\r\n    }\r\n    spawnPostes(){\r\n        this.index = randomRangeInt(0,4)\r\n        switch(this.index){\r\n            case 0: const node0 = instantiate(this.listapostes[0])\r\n                    node0.setParent(this.node);\r\n                    node0.setPosition(20,0,0);\r\n             break;\r\n            case 1: const node1 = instantiate(this.listapostes[1])\r\n                    node1.setParent(this.node);\r\n                    node1.setPosition(20,0,0);\r\n            break;\r\n            case 2: const node2 = instantiate(this.listapostes[2])\r\n                    node2.setParent(this.node);\r\n                    node2.setPosition(20,0,0);\r\n             break;\r\n            case 3: const node3 = instantiate(this.listapostes[3])\r\n                    node3.setParent(this.node);\r\n                    node3.setPosition(20,0,0);\r\n            break;\r\n            case 4: const node4 = instantiate(this.listapostes[4])\r\n                node4.setParent(this.node);\r\n                node4.setPosition(20,0,0);\r\n            break;\r\n        }\r\n        this.creando=false;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if(!this.creando)\r\n            {\r\n                this.creando=true;\r\n                this.scheduleOnce(function(){\r\n                    this.spawnPostes()\r\n                },this.timer)\r\n            }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Prefab, randomRangeInt, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpawnTarjetas')\r\nexport class SpawnTarjetas extends Component {\r\n    @property([Node])\r\n    public listatarjetas : Node [] = [] ;\r\n    \r\n    private creando : boolean = false;\r\n    private Timer : number = 12.5;\r\n    @property(Prefab)\r\n    public prefab : Prefab = null\r\n    private index : number = 0;\r\n    protected onLoad(): void {\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n    spawnMonedas(){\r\n        this.index = randomRangeInt(0,4)\r\n        switch(this.index){\r\n            case 0: \r\n                    const node = instantiate(this.prefab)\r\n                    node.setParent(this.node);\r\n                    node.setPosition(this.listatarjetas[0].position);\r\n            break;\r\n            case 1: const node1 = instantiate(this.prefab);\r\n                    node1.setParent(this.node);\r\n                    node1.setPosition(this.listatarjetas[1].position);\r\n                    break;\r\n            case 2: const node2 = instantiate(this.prefab);\r\n                    node2.setParent(this.node);\r\n                    node2.setPosition(this.listatarjetas[2].position);\r\n                    break;\r\n            case 3: \r\n            const node3 = instantiate(this.prefab);\r\n                    node3.setParent(this.node);\r\n                    node3.setPosition(this.listatarjetas[3].position);\r\n            break;\r\n            case 4: \r\n                    const node4 = instantiate(this.prefab);\r\n                    node4.setParent(this.node);\r\n                    node4.setPosition(this.listatarjetas[4].position);\r\n            break;\r\n\r\n        }\r\n        this.creando=false;\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n        if(!this.creando){\r\n            this.creando=true;\r\n            this.scheduleOnce(function(){\r\n                this.spawnMonedas();\r\n            }, this.Timer);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}