{"version":3,"sources":["../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/CambioEscena.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/CarrulItems.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/Coche.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/CollisionesPared.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/CompraColor.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/CompraObjetos.ts","../file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/FollowPlayer.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/info.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/Instrucciones.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/Manager.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/ManagerGeneral.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/Raycast.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/RemovePieza.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/RotarPiezas.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/SeleccionColor.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/SelladoPieza.ts","../file:/E:/Pase-Camino-Completo/assets/Scripts/file:/E:/Pase-Camino-Completo/assets/Scripts/SpawnPiso.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","CCString","_descriptor","_applyDecoratedDescriptor","_class2","_Component","CambioEscena","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_inheritsLoose","_proto","prototype","onLoad","cambio","_this2","director","preloadScene","this","name2","toString","completedCount","totalCount","item","error","asset","loadScene","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","Node","_dec3","_dec4","CarrulItems","_descriptor2","index","_descriptor3","ma","find","i","items","active","botones","start","update","deltaTime","next","console","log","back","EstoyActivo","index_","children","CCFloat","_dec5","Vec3","_dec6","_dec7","_dec8","RigidBody","_dec9","CCBoolean","_dec10","_dec11","_dec12","CCInteger","_dec13","Label","_dec14","ManagerGeneral","_dec15","Coche","speedMax","valormin","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","valorx","valory","negativ","_descriptor9","_descriptor10","aumenta","GameOver","_descriptor11","_descriptor12","Score","ScoreGameOver","_descriptor13","_descriptor14","a","managerG","getComponent","rigid","node","getComponentInChildren","SpawnPisoNode","speed","ScoreText","string","collider","Collider","on","onCollisionEnter","onCollisionExit","SpawnPiso","tiempo","tiempoSpawn","contadorTarjetas","scheduleOnce","inicio","AnularFuerzas","Muerto","event","otherCollider","getGroup","Padre","parent","RotarPieza","FollowPlayer","derecha","SelladoPieza","Derecha","Sellado","yaPaso","getChildByName","ParticleSystem","play","RemovePieza","remove","indexP","IndexPieza","info","nombre","setRotationFromEuler","destroy","Power","Animation","Save","avanza","moveDirection","x","y","setPosition","aumentaDif","tiempoRotacion","Actualizar","CollisionesPared","onControllerTriggerEnter","SpriteFrame","Button","Color","_dec16","_dec17","_dec18","_dec19","_dec20","CompraColor","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","subMenu","desbloqueado","CargaCocheDesbloqueado","botonCompra","EventType","CLICK","Compra","cerrar","Cerrar","Sprite","spriteFrame","normalFrame","normalSprite","colorFinal","colorID","miColorID","modeloID","miModeloID","SaveCoche","LoadData","hoverSprite","costoString","color","colorTexto","colorTextoNormal","Seleccion","name","costo","subSprite","colorModelo","MeAlcanza","coche","pressedSprite","tarjeta","interactable","onDisable","valor","ActualizaCompras","Comprado","CocheDesbloqueado","CompraObjetos","desMOD","miCosto","modelo","colores","SeleccionColor","Colores","azul","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","miscNode","buttonNode","instantiate","titleNode","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","overflow","currentRow","newNode","singleModeToggle","textComponent","RichText","Toggle","TOGGLE","toggleSingleMode","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","SpawnP","mueveCamara","target","currentPosition","position","clone","lerp","targetD","z","targetI","Instrucciones","sys","isMobile","mobile","listaFinal","PC","lista","Mesh","Material","Manager","CargaCoche","modeloCoche","miColor","MiCoche","player","MeshRenderer","mesh","modelos","setSharedMaterial","materiales","dt","localStorage","setItem","score","contadorMonedas","monedasString","getItem","tarjetaString","parseInt","tipo","colorIDString","modeloIDString","undefined","warn","comprado","compra","meCompraron","Camera","Raycast","rotateY","input","Input","TOUCH_START","onTouchStart","_this$mainCamera","PhysicsSystem","instance","resetAccumulator","touch","getLocation","ray","geometry","Ray","mainCamera","screenPointToRay","raycast","results","raycastResults","clickedNode","rotateNode","rotapieza","RotaPieza","Math","floor","currentRotation","getRotation","additionalRotation","Quat","fromEuler","rotationAngle","newRotation","math","multiply","setRotation","onDestroy","off","RotarPiezas","ultima","ontouch","TOUCH_MOVE","TOUCH_END","ontouchcancel","TOUCH_CANCEL","ultimaPieza","rotation","cambiaultima","numb","Spawn","GameObjetc","amarillo","verde","rojo","naranja","SellarPiezas","Prefab","creando","distanciax","distanciaz","PowerUp","indexPiezasOrdenar","vertical","asignaindex","pieza","crea","izquierda","randomRangeInt","horizontal","LimiteH","node2","prefab","RotaRandomPieza","push","node1","valorMax","LimiteV","node3","ordenaPiezas","ind","max","Pieza","random","rotaty"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, director, SceneAsset, CCString } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CambioEscena')\r\nexport class CambioEscena extends Component {\r\n    @property(CCString)\r\n    public name2 : String = \"\";\r\n    onLoad() {\r\n        // Agrega un evento de clic al botón\r\n       \r\n       \r\n    }\r\n\r\n    //cc.director.preloadScene(\"table\", function () {\r\n    //    cc.log(\"Next scene preloaded\");\r\n    //});\r\n    cambio() {\r\n        // Cambia a la nueva escena (\"GameScene\" en este ejemplo)\r\n        //director.preloadScene(this.name2.toString());\r\n       /* director.preloadScene(this.name2.toString(), function() {\r\n            console.log(\"Next scene preloaded\");\r\n            director.loadScene(this.name2.toString());\r\n        });*/\r\nvar progress = 0;\r\n       director.preloadScene(this.name2.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n        progress = completedCount / totalCount;\r\n    }, (error: Error, asset: SceneAsset) => {\r\n        //do something after preloaded scene\r\n        director.loadScene(this.name2.toString());\r\n    });\r\n       \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, find } from 'cc';\r\nimport { SeleccionColor } from './SeleccionColor';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CarrulItems')\r\nexport class CarrulItems extends Component \r\n{\r\n    @property(Node) public botones: Node[]=[];\r\n    @property(Node) public items: Node[]=[];\r\n    index:number=0;\r\n    @property (Node) ma:Node=null;\r\n\r\n    onLoad()\r\n    {\r\n        this.ma=find(\"Canvas/ManagerGeneral\");\r\n        for(let i=1;i<this.items.length;i++)\r\n            {\r\n                this.items[i].active=false;\r\n            }\r\n        \r\n        //this.items[2].active=false;\r\n        this.index=0;\r\n        this.botones[1].active=false;\r\n    }\r\n    start() \r\n    {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) \r\n    {\r\n        if(this.index==0)\r\n            {\r\n                this.botones[1].active=false;\r\n            }else\r\n            {\r\n                this.botones[1].active=true;\r\n            }\r\n     \r\n            if(this.index==this.items.length-1)\r\n            {\r\n                this.botones[0].active=false;\r\n            }\r\n            else\r\n            {\r\n                this.botones[0].active=true;\r\n            }\r\n    }\r\n\r\n    next()\r\n    {\r\n        console.log(\"next\");\r\n        if(this.index<this.items.length-1)\r\n            {\r\n                this.index++;\r\n                this.items[this.index].active=true;\r\n                this.items[this.index-1].active=false;\r\n                console.log(this.index);\r\n                //this.EstoyActivo(this.index);\r\n                \r\n            }\r\n    }\r\n\r\n    back()\r\n    {\r\n        console.log(\"back\");\r\n        if(this.index>0)\r\n            {\r\n                this.index--;\r\n                this.items[this.index].active=true;\r\n                this.items[this.index+1].active=false;\r\n                console.log(this.index);\r\n                //this.EstoyActivo(this.index);\r\n            }\r\n    }\r\n\r\n    EstoyActivo(index_:number)\r\n    {\r\n        if(this.items[index_].children[0].active)\r\n        {\r\n            //this.ma.getComponent(SeleccionColor).MeSeleccionaron(index_);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, RigidBody, Vec3, CCFloat, CCBoolean, Collider, ICollisionEvent, find, CCInteger, ParticleSystem, Animation, Label } from 'cc';\r\nimport { info } from './info';\r\nimport { SpawnPiso } from './SpawnPiso';\r\nimport { RotarPiezas } from './RotarPiezas';\r\nimport { SelladoPieza } from './SelladoPieza';\r\nimport { FollowPlayer } from './FollowPlayer';\r\nimport { RemovePieza } from './RemovePieza';\r\nimport { ManagerGeneral } from './ManagerGeneral';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Coche')\r\nexport class Coche extends Component {\r\n    @property(CCFloat)\r\n    public speed:number;\r\n    private speedMax : number =9.1;\r\n    private valormin : number = .1;\r\n    @property(CCFloat)\r\n    public tiempoSpawn : number = 0;\r\n    @property(CCFloat)\r\n    public tiempoRotacion : number = 0;\r\n    @property(Vec3)\r\n    public moveDirection : Vec3 = new Vec3;\r\n    @property (CCFloat)\r\n    public angle : number = 0;\r\n    @property(Node)\r\n    public nodeImage : Node = null;\r\n    @property(RigidBody)\r\n    private rigid:RigidBody = null;\r\n    @property(CCBoolean)\r\n    private inicio :boolean = false;\r\n    private valorx : number = 0;\r\n    private valory : number = 0;\r\n    private negativ :boolean = false;\r\n    @property(Node)\r\n    private SpawnPisoNode : Node = null;\r\n    @property(Node)\r\n    private RotarPieza : Node = null;\r\n    private aumenta : boolean = false;\r\n    private GameOver : Node = null;\r\n    @property(CCInteger)\r\n    private indexP : number = 0;\r\n    @property(Label)\r\n    public ScoreText : Label = null;\r\n    public Score : number = 0;\r\n    private ScoreGameOver : Label = null;\r\n\r\n    @property(ManagerGeneral)managerG:ManagerGeneral=null;\r\n    @property(CCFloat) public contadorTarjetas:number=0;\r\n    a:Node=null;\r\n\r\n\r\n    protected onLoad(): void {\r\n        this.a=find(\"Canvas/ManagerGeneral\");\r\n        this.managerG=this.a.getComponent(ManagerGeneral);\r\n        this.Score = 0;\r\n        this.rigid = this.node.getComponentInChildren(RigidBody);\r\n        this.SpawnPisoNode = find(\"ManagerMapa\")\r\n        this.valorx = (this.speed/100) * -1;\r\n        this.GameOver = find(\"Canvas/gameover\");\r\n        this.ScoreText = find(\"Canvas/Marcos/Score\").getComponent(Label);\r\n        this.ScoreGameOver = find(\"Canvas/gameover/fin/Score\").getComponent(Label);\r\n       \r\n        this.ScoreText.string = this.Score.toString();\r\n        this.GameOver.active=false;\r\n       \r\n        \r\n       \r\n        const collider = this.getComponentInChildren(Collider);\r\n        if (collider) {\r\n            // Registrar los eventos de colisión\r\n            collider.on('onTriggerEnter', this.onCollisionEnter, this);\r\n            //collider.on('onCollisionStay', this.onCollisionStay, this);\r\n            collider.on('onCollisionExit', this.onCollisionExit, this);\r\n        }\r\n        this.SpawnPisoNode.getComponent(SpawnPiso).tiempo = this.tiempoSpawn;\r\n\r\n        this.contadorTarjetas=this.managerG.contadorTarjetas;\r\n        \r\n    }\r\n    start() {\r\n        \r\n        this.scheduleOnce(function(){\r\n            this.inicio = true;\r\n        },5)\r\n\r\n        this.contadorTarjetas=this.managerG.contadorTarjetas;\r\n        \r\n    }\r\n    AnularFuerzas(){\r\n        this.GameOver.active = true;\r\n      //  this.rigid.clearForces();\r\n      this.valorx = 0;\r\n      this.valory = 0;\r\n        this.inicio=false;\r\n        this.SpawnPisoNode.getComponent(SpawnPiso).Muerto = true;\r\n        this.ScoreGameOver.string = this.ScoreText.string;\r\n       // this.RotarPieza.getComponent(RotarPiezas).Muerto = true;\r\n\r\n    }\r\n\r\n    onCollisionEnter(event: ICollisionEvent) {\r\n        // Lógica cuando comienza una colisión\r\n       //console.log('Colisión detectada al entrar con: ', event.otherCollider.name);\r\n       if(event.otherCollider.getGroup()==64){\r\n        const Padre = event.otherCollider.node.parent \r\n        this.RotarPieza.getComponent(FollowPlayer).derecha = Padre.getComponent(SelladoPieza).Derecha;\r\n        //console.log (Padre.name);\r\n        Padre.getComponent(SelladoPieza).Sellado = true;\r\n        if(!Padre.getComponent(SelladoPieza).yaPaso){\r\n            Padre.getChildByName(\"Particulas\").getComponent(ParticleSystem).play();\r\n            Padre.getComponent(SelladoPieza).yaPaso=true;\r\n            this.Score +=1;\r\n            this.ScoreText.string = this.Score.toString();\r\n            ////////\r\n        }\r\n        Padre.getComponent(RemovePieza).remove();\r\n       \r\n        this.indexP = Padre.getComponent(SelladoPieza).IndexPieza;\r\n        let name : number = event.otherCollider.node.getComponent(info).nombre;\r\n       \r\n        switch(name){\r\n            case 0:\r\n                //vertical;\r\n               //this.rigid.clearVelocity();\r\n               //this.rigid.clearForces();\r\n               //this.rigid.applyLocalForce(new Vec3(this.moveDirection.x * -2.5,0,this.moveDirection.y * -2));\r\n               this.node.setRotationFromEuler(new Vec3(0,0,0))\r\n               this.valorx = (this.speed/100) * -1;\r\n                this.valory = 0;\r\n                break;\r\n            case 1:\r\n                //Izquierda\r\n                this.valorx = 0;\r\n               this.node.setRotationFromEuler(new Vec3(0,-90,0))\r\n                this.valory = (this.speed/100) * -1;\r\n               // this.valory = -1/100;\r\n                break;\r\n            case 2:\r\n                //Derecha\r\n               this.valorx = 0;\r\n                this.node.setRotationFromEuler(new Vec3(0,90,0))\r\n                this.valory = (this.speed/100) * 1;\r\n                //this.valory = 1/100;\r\n                \r\n                break;\r\n            case 3:\r\n               this.node.setRotationFromEuler(new Vec3(0,0,0))\r\n                this.valorx = (this.speed/100) * -1;\r\n                this.valory = 0;\r\n                \r\n               \r\n                break;\r\n            case 4:\r\n                 //Horizontal\r\n                 this.valorx = 0;\r\n\r\n                \r\n        }\r\n        \r\n       }\r\n       if (event.otherCollider.getGroup() == 16){\r\n            //console.log(\"Toque tarejta \" + event.otherCollider.getGroup().toString())\r\n            event.otherCollider.node.getComponent(Collider).destroy();\r\n            this.SpawnPisoNode.getComponent(SpawnPiso).Power(this.indexP);\r\n            event.otherCollider.node.getComponent(Animation).play(\"Tarjeta-Desaparece\");\r\n            console.log(\"ORDENA\");\r\n\r\n            /*CONTADOR TARJETAS*/\r\n\r\n            if(this.managerG.contadorTarjetas==null)\r\n                {\r\n                    this.managerG.contadorTarjetas=0;\r\n                }\r\n                \r\n\r\n            this.contadorTarjetas+=5;\r\n            console.log(\"this.contadorTarjetas\"+this.contadorTarjetas);\r\n            this.managerG.contadorTarjetas=this.contadorTarjetas;\r\n            console.log(\"this.managerG.contadorTarjetas\"+this.managerG.contadorTarjetas);\r\n            this.managerG.Save();\r\n       }\r\n    }\r\n    onCollisionExit(event:ICollisionEvent){\r\n       // console.log('Colisión detectada al salir con: ', event.otherCollider.node.name);\r\n    }\r\n    avanza(){\r\n        this.moveDirection.x += this.valorx;\r\n        this.moveDirection.y += this.valory;\r\n        this.node.setPosition(new Vec3 ( this.moveDirection.x, 0,this.moveDirection.y));\r\n        //this.moveDirection.y += this.valory;\r\n\r\n       // this.angle = Math.atan2(this.moveDirection.x, this.moveDirection.y) * (-180 / Math.PI);\r\n        //Vec3.normalize(this.moveDirection, this.moveDirection);\r\n       // this.nodeImage.angle=this.angle;\r\n        //this.rigid.applyLocalForce(new Vec3(this.moveDirection.x * this.speed,0,this.moveDirection.y * this.speed));\r\n    }\r\n    aumentaDif(){\r\n        this.speed += .5;\r\n        if(this.speed >= this.speedMax){\r\n            this.speed = this.speedMax;\r\n        }\r\n        this.tiempoSpawn -= .8\r\n        \r\n       \r\n        if(this.tiempoSpawn <= this.valormin){\r\n            this.tiempoSpawn = this.valormin;\r\n        }\r\n        this.SpawnPisoNode.getComponent(SpawnPiso).tiempo = this.tiempoSpawn;\r\n        this.tiempoRotacion -= .08;\r\n        this.aumenta=false;\r\n        \r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n        if(this.inicio){\r\n            this.avanza();\r\n            if(!this.aumenta)\r\n            {\r\n                this.aumenta = true;\r\n                this.scheduleOnce(function(){\r\n                    this.aumentaDif()\r\n                },10)\r\n            }\r\n        }\r\n    }\r\n\r\n    Actualizar()\r\n    {\r\n        this.managerG.contadorTarjetas=this.contadorTarjetas;\r\n        console.log(this.managerG.contadorTarjetas);\r\n\r\n        this.managerG.Save();\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Collider, ICollisionEvent } from 'cc';\r\nimport{Coche} from \"./Coche\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CollisionesPared')\r\nexport class CollisionesPared extends Component {\r\n\r\n\r\n\r\n    protected onLoad(): void {\r\n        const collider = this.getComponent(Collider);\r\n        if(collider){\r\n           \r\n            collider.on('onTriggerEnter',this.onControllerTriggerEnter, this)\r\n            collider.on('onCollisionExit', this.onCollisionExit, this);\r\n        }\r\n        \r\n        \r\n    }\r\n    onControllerTriggerEnter(event: ICollisionEvent){\r\n        //console.log(event.otherCollider.getGroup().toString());\r\n        if(event.otherCollider.getGroup()== 2){\r\n            //console.log(\"Chocaste contra pared nub\");\r\n            this.node.parent.getComponent(Coche).AnularFuerzas();\r\n        }\r\n       \r\n\r\n    }\r\n   \r\n    onCollisionExit(event: ICollisionEvent){\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, find, Button, Sprite, Color, color, Label, CCFloat, CCString, SpriteFrame, CCBoolean } from 'cc';\r\nimport { ManagerGeneral } from './ManagerGeneral';\r\nimport { SeleccionColor } from './SeleccionColor';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CompraColor')\r\nexport class CompraColor extends Component \r\n{\r\n    @property(Node) subMenu: Node=null;\r\n    @property(Label) costoString:Label=null;\r\n    @property(Node) subSprite:Node=null;\r\n    /////////////////////////////////////////////\r\n    @property(CCFloat) costo:number=0;\r\n    @property (SpriteFrame) colorFinal:SpriteFrame=null;\r\n    @property (SpriteFrame) colorModelo:SpriteFrame=null;\r\n    @property(Node) coche:Node;//modelo del coche para ventana compra\r\n\r\n    ////////////////////////////////////////////////\r\n    @property(CCFloat) miColorID:number;\r\n    @property(CCFloat) miModeloID:number;\r\n    \r\n    /////////////////////////////////////////////////\r\n    @property (Button) botonCompra: Button;\r\n    @property(Button) cerrar:Button;\r\n\r\n    managerG:ManagerGeneral;\r\n    ma:Node=null;\r\n\r\n    @property(Node) botones:Node=null;\r\n    @property(CCString) colors:string=\"\";\r\n    @property(Color) colorTexto:Color=null;\r\n    @property(Color) colorTextoNormal=null;\r\n    \r\n    @property(CCString) nombre:string=\"\";\r\n    @property (CCFloat) desbloqueado:number=0;\r\n    @property(SpriteFrame) normalFrame: SpriteFrame=null;\r\n\r\n    @property(CCBoolean) tarjeta:boolean=false;\r\n    \r\n\r\n    protected onLoad(): void \r\n    {\r\n        this.ma=find(\"Canvas/ManagerGeneral\");\r\n        //this.botones=find(\"Canvas/Botones\");\r\n        this.managerG=this.ma.getComponent(ManagerGeneral);\r\n        this.subMenu.active=false;\r\n\r\n        this.desbloqueado=this.managerG.CargaCocheDesbloqueado(this.nombre,this.desbloqueado);\r\n\r\n        \r\n        \r\n        this.botonCompra.node.on(Button.EventType.CLICK, this.Compra, this);\r\n        this.cerrar.node.on(Button.EventType.CLICK, this.Cerrar, this);\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if(this.desbloqueado==1)\r\n            {\r\n                console.log(\"ya me desbloquearon\");\r\n                this.node.getComponent(Sprite).spriteFrame=this.normalFrame;\r\n                this.node.getComponent(Button).normalSprite=this.normalFrame;\r\n            }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if(this.node.getComponent(Sprite).spriteFrame==this.colorFinal)\r\n            {\r\n                this.managerG.colorID=this.miColorID;\r\n                this.managerG.modeloID=this.miModeloID;\r\n\r\n                this.managerG.SaveCoche();\r\n                this.managerG.LoadData();\r\n            }\r\n            if(this.botonCompra.node.active)\r\n                {\r\n                    if(this.botonCompra.getComponent(Sprite).spriteFrame==this.botonCompra.getComponent(Button).hoverSprite)\r\n                        {\r\n                            this.costoString.color=this.colorTexto;\r\n                        }\r\n                        else\r\n                        {\r\n                            this.costoString.color=this.colorTextoNormal;\r\n                        }\r\n                }\r\n       \r\n        \r\n    }\r\n\r\n    Cerrar()\r\n    {\r\n        this.subMenu.active=false;\r\n        this.botones.active=true;\r\n        this.botonCompra.node.active=false;\r\n    }\r\n\r\n    Seleccion()\r\n    {\r\n        \r\n        if(this.node.getComponent(Sprite).spriteFrame.name=='bloqueado')\r\n        {\r\n            console.log(\"comprar\");\r\n            this.subMenu.active=true;\r\n            this.botonCompra.node.active=true;\r\n            this.costoString.string=this.costo.toString();\r\n            this.botones.active=false;\r\n            this.subSprite.getComponent(Sprite).spriteFrame=this.colorModelo;\r\n            this.MeAlcanza();\r\n        }\r\n        else\r\n        {\r\n            console.log(\"seleccion\");\r\n            this.coche.getComponent(Sprite).spriteFrame=this.colorModelo;\r\n            this.node.getComponent(Button).pressedSprite=this.colorFinal;\r\n            this.node.getComponent(Button).normalSprite=this.colorFinal;\r\n            //this.ma.getComponent(SeleccionColor).Colores(this.colors);\r\n            //Selecciona este color\r\n            this.managerG.colorID=this.miColorID;\r\n            this.managerG.modeloID=this.miModeloID;\r\n            this.managerG.SaveCoche();\r\n        }\r\n    }\r\n\r\n    MeAlcanza()\r\n    {\r\n        /*if(!this.tarjeta)\r\n        {\r\n            if(this.costo<=this.managerG.contadorMonedas)\r\n                {\r\n                    this.botonCompra.interactable=true;\r\n                }\r\n                else\r\n                {\r\n                    this.botonCompra.interactable=false;\r\n                    this.botonCompra.onDisable();\r\n                }     \r\n        }\r\n        else*/ if(this.tarjeta)\r\n            {\r\n                if(this.costo<=this.managerG.contadorTarjetas)\r\n                    {\r\n                        this.botonCompra.interactable=true;\r\n                        console.log(this.costo + \" \" + this.managerG.contadorTarjetas);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.botonCompra.interactable=false;\r\n                        this.botonCompra.onDisable();\r\n                        console.log(\"No Alcanza\");\r\n                    }     \r\n            }\r\n        \r\n    }\r\n\r\n    Compra(valor:number)\r\n    {\r\n        if(!this.tarjeta)\r\n            this.managerG.ActualizaCompras(valor,\"moneda\");\r\n        else if(this.tarjeta)\r\n            this.managerG.ActualizaCompras(valor,\"tarjeta\");\r\n        this.costoString.color=this.colorTexto;\r\n        this.managerG.Save();\r\n        this.Comprado();\r\n        //this.candadoIcon.active=false;\r\n\r\n        //this.managerG.modeloID=this.miModeloID;\r\n        //this.managerG.colorID=this.miColorID;\r\n        this.managerG.SaveCoche();\r\n        this.managerG.LoadData();\r\n        \r\n    }\r\n\r\n    Comprado()\r\n    {\r\n        \r\n        this.node.getComponent(Sprite).spriteFrame=this.colorFinal;\r\n        console.log(this.colorModelo.name);\r\n        this.coche.getComponent(Sprite).spriteFrame=this.colorModelo;\r\n        this.node.getComponent(Button).normalSprite=this.colorFinal;\r\n        this.node.getComponent(Button).pressedSprite=this.colorFinal;\r\n        this.subMenu.active=false;\r\n        this.botones.active=true;\r\n        this.botonCompra.node.active=false;\r\n        this.costoString.color=this.colorTextoNormal;\r\n        this.managerG.colorID=this.miColorID;\r\n        this.managerG.modeloID=this.miModeloID;\r\n        //this.ma.getComponent(SeleccionColor).Colores(this.colors);\r\n\r\n        this.managerG.CocheDesbloqueado(1,this.nombre);\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, find, CCBoolean, CCFloat, Button, Label, SpriteFrame, Sprite, CCString, CCInteger } from 'cc';\r\nimport { ManagerGeneral } from './ManagerGeneral';\r\nimport { SeleccionColor } from './SeleccionColor';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CompraObjetos')\r\nexport class CompraObjetos extends Component \r\n{\r\n    managerG:ManagerGeneral;\r\n    @property (Node) ma:Node=null;\r\n    //@property(CCBoolean) moneda:Boolean;\r\n    @property(CCFloat) costo:number;\r\n    @property(Label) miCosto:Label=null;\r\n\r\n    @property(Node) colores:Node=null;\r\n    @property(SpriteFrame) azul:SpriteFrame=null;\r\n    @property(SpriteFrame) modelo:SpriteFrame=null;\r\n    @property(CCFloat) desMOD:number=0;\r\n\r\n    @property(CCString) nombre:string=\"\";\r\n    @property(CCFloat) modeloID:number=0;\r\n    \r\n\r\n\r\n\r\n    protected onLoad(): void \r\n    {\r\n        this.ma=find(\"Canvas/ManagerGeneral\");\r\n        this.managerG=this.ma.getComponent(ManagerGeneral);\r\n        //this,this.managerG.LoadData();\r\n        this.desMOD=this.managerG.CargaCocheDesbloqueado(this.nombre,this.desMOD);\r\n\r\n        this.miCosto.string=this.costo.toString();\r\n        this.MeAlcanza();\r\n        \r\n    }\r\n\r\n    start() \r\n    {\r\n        \r\n        if(this.desMOD==1)\r\n            {\r\n                console.log(\"modelo desbloqueado\");\r\n                this.node.parent.children[1].getComponent(Sprite).spriteFrame=this.modelo;\r\n                this.colores.active=true;\r\n                \r\n                this.ma.getComponent(SeleccionColor).Colores(\"azul\");\r\n                this.colores.children[0].getComponent(Sprite).spriteFrame=this.azul;\r\n                this.colores.children[0].getComponent(Button).normalSprite=this.azul;\r\n                //this.ma.getComponent(SeleccionColor).MeSeleccionaron(this.modeloID);\r\n                this.node.active=false;\r\n        \r\n            }\r\n            \r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    MeAlcanza()\r\n    {\r\n        if(this.costo<=this.managerG.contadorTarjetas)\r\n        {\r\n            this.node.getComponent(Button).interactable=true;\r\n        }\r\n        else\r\n        {\r\n            this.node.getComponent(Button).interactable=false;\r\n            this.node.getComponent(Button).onDisable();\r\n        }\r\n    }\r\n\r\n    Compra()\r\n    {\r\n        this.managerG.ActualizaCompras(this.costo,\"tarjeta\");\r\n                /*this.managerG.control=this.control;\r\n                this.managerG.iman=this.iman;*/\r\n\r\n                this.ma.getComponent(SeleccionColor).Colores(\"azul\");\r\n                \r\n                this.colores.active=true;\r\n                this.colores.children[0].getComponent(Sprite).spriteFrame=this.azul;\r\n                this.colores.children[0].getComponent(Button).normalSprite=this.azul;\r\n\r\n                this.managerG.colorID=0;\r\n                this.node.parent.children[1].getComponent(Sprite).spriteFrame=this.modelo;\r\n                this.managerG.modeloID=this.modeloID;\r\n                this.managerG.CocheDesbloqueado(1,this.nombre);\r\n        this.managerG.Save();\r\n        \r\n\r\n        this.node.active=false;\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import { _decorator, CCBoolean, Component, find, Node, Vec3 } from 'cc';\r\nimport { SpawnPiso } from './SpawnPiso';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FollowPlayer')\r\nexport class FollowPlayer extends Component {\r\n\r\n    @property(Node)\r\n    public player : Node;\r\n\r\n    @property(Node)\r\n    coche : Node;\r\n    @property(Node)\r\n    public SpawnP : Node; \r\n    @property(CCBoolean)\r\n    public derecha = false;\r\n\r\n    \r\n\r\n    onLoad() {\r\n        this.SpawnP = find(\"ManagerMapa\");\r\n       /* for(let i = 0 ; i< this.player.children.length; i++)\r\n            {\r\n                 if(this.player.children[i].active)\r\n                    {\r\n                        this.coche = this.player.children[i];\r\n                    }\r\n            }*/\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n    mueveCamara(deltaTime: number, target : Vec3){\r\n        let currentPosition : Vec3 = this.node.position.clone();\r\n        Vec3.lerp(currentPosition, this.node.position, target , .5 * deltaTime ); \r\n        this.node.setPosition( currentPosition);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if(this.derecha){\r\n           const targetD = new Vec3(this.coche.position.x-23,this.coche.position.y +20, this.coche.position.z+27)\r\n           this.mueveCamara(deltaTime,targetD)\r\n        }\r\n        else{\r\n            const targetI = new Vec3(this.coche.position.x-25,this.coche.position.y +20, this.coche.position.z+20)\r\n            this.mueveCamara(deltaTime,targetI);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, CCInteger, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('info')\r\nexport class info extends Component {\r\n    @property(CCInteger)\r\n    public nombre : number = 0;\r\n    \r\n}\r\n\r\n\r\n","import { _decorator, Component, Node,sys, director, SceneAsset } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Instrucciones')\r\nexport class Instrucciones extends Component {\r\n\r\n    @property(Node)\r\n    public PC : Node = null;\r\n    @property(Node)\r\n    public mobile : Node = null;\r\n    @property([Node])\r\n    public lista: Node[] =[];\r\n    @property([Node])\r\n    public listaFinal: Node[] =[];\r\n    @property([Node])\r\n    public botones: Node[]=[];\r\n    public index: number = 0;\r\n \r\n \r\n    onLoad() {\r\n        // Verifica si el juego se está ejecutando en un dispositivo móvil\r\n        if (sys.isMobile) {\r\n \r\n            var progress = 0;\r\n            director.preloadScene(this.mobile.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n            progress = completedCount / totalCount;\r\n            }, (error: Error, asset: SceneAsset) => {\r\n                //do something after preloaded scene\r\n            director.loadScene(this.mobile.toString());\r\n            });\r\n            // Código específico para dispositivos móviles\r\n            // this.PC.active=false;\r\n           this.mobile.active=true;\r\n           this.listaFinal[0]=this.mobile;\r\n        } else {\r\n            // Código para otras plataformas (por ejemplo, navegadores)\r\n            this.PC.active=true;\r\n           //this.mobile.active=false;\r\n \r\n           this.listaFinal[0]=this.PC;\r\n           var progress = 0;\r\n            director.preloadScene(this.PC.toString(), (completedCount: number, totalCount: number, item: any) => {\r\n            progress = completedCount / totalCount;\r\n             }, (error: Error, asset: SceneAsset) => {\r\n             //do something after preloaded scene\r\n            director.loadScene(this.PC.toString());\r\n            });\r\n        }\r\n \r\n        this.listaFinal[1]=this.lista[0];\r\n        \r\n    }\r\n \r\n   \r\n \r\n \r\n    start() {\r\n \r\n        this.botones[1].active=false;\r\n \r\n    }\r\n    update (){\r\n \r\n        if(this.index==0)\r\n        {\r\n            this.botones[1].active=false;\r\n        }else\r\n        {\r\n            this.botones[1].active=true;\r\n        }\r\n \r\n        if(this.index==this.listaFinal.length-1)\r\n        {\r\n            this.botones[0].active=false;\r\n        }\r\n        else\r\n        {\r\n            this.botones[0].active=true;\r\n        }\r\n        \r\n    }\r\n \r\n    next()\r\n    {\r\n        if(this.index<this.listaFinal.length-1)\r\n        {\r\n            this.index++;\r\n \r\n            this.listaFinal[this.index].active=true;\r\n            this.listaFinal[this.index-1].active=false;\r\n           \r\n           \r\n        }\r\n       \r\n    }\r\n \r\n    back()\r\n    {\r\n        if(this.index>0)\r\n        {\r\n            this.index--;\r\n            this.listaFinal[this.index].active=true;\r\n            this.listaFinal[this.index+1].active=false;\r\n           \r\n        }\r\n \r\n    }\r\n \r\n}\r\n\r\n\r\n","import { _decorator, CCBoolean, CCFloat, Component, find, Label, Node, SpriteFrame, sys, Sprite, MeshRenderer, Mesh, Color, Material } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { ManagerGeneral } from './ManagerGeneral';\r\n\r\n@ccclass('Manager')\r\nexport class Manager extends Component \r\n{\r\n    @property(Node) player:Node=null;\r\n    @property([Mesh]) modelos:Mesh[]=[];\r\n\r\n    \r\n\r\n    @property([Material]) materiales:Material[]=[];\r\n    \r\n    \r\n\r\n    @property(CCFloat) modeloCoche:number=0;\r\n    @property(CCFloat) miColor:number=0;\r\n\r\n    @property(ManagerGeneral)managerG:ManagerGeneral=null;\r\n\r\n    a:Node=null;\r\n\r\n    \r\n    /*\r\n    @property (Color) cAzul = new Color(110, 135, 231, 255);\r\n    @property (Color) cAmarillo = new Color(226, 231, 110, 255);\r\n    @property (Color) cVerde = new Color(110, 231, 110, 255);\r\n    @property (Color) cRojo = new Color(231, 110, 110, 255);\r\n    @property (Color) cNaranja = new Color(231, 187, 110, 255);*/\r\n\r\n    \r\n    \r\n\r\n    protected onLoad(): void \r\n    {\r\n        //this.player=find(\"Player\");\r\n        \r\n        this.a=find(\"Canvas/ManagerGeneral\");\r\n        this.managerG=this.a.getComponent(ManagerGeneral);\r\n        //this.managerG.LoadData();\r\n        \r\n        this.managerG.CargaCoche();\r\n\r\n        this.modeloCoche=this.managerG.modeloID;\r\n        this.miColor=this.managerG.colorID;\r\n        console.log(this.miColor);\r\n        \r\n\r\n        this.MiCoche();\r\n        \r\n        \r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) \r\n    {\r\n        \r\n    }\r\n\r\n    MiCoche()\r\n    {\r\n        console.log(\"this.miColor\");\r\n        switch(this.modeloCoche)\r\n        {\r\n            case 0:\r\n                this.player.getComponent(MeshRenderer).mesh=this.modelos[0];\r\n                this.player.getComponent(MeshRenderer).setSharedMaterial(this.materiales[this.miColor],0);\r\n                //this.ColorCoche(this.player.getComponent(MeshRenderer));\r\n                \r\n                break;\r\n            case 1:\r\n                this.player.getComponent(MeshRenderer).mesh=this.modelos[1];\r\n                this.player.getComponent(MeshRenderer).setSharedMaterial(this.materiales[this.miColor],0);\r\n               \r\n                break;\r\n            case 2:\r\n                this.player.getComponent(MeshRenderer).mesh=this.modelos[2];\r\n                this.player.getComponent(MeshRenderer).setSharedMaterial(this.materiales[this.miColor],0);\r\n               \r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, CCFloat, sys, CCString, Label, find } from 'cc';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ManagerGeneral')\r\nexport class ManagerGeneral extends Component {\r\n\r\n    @property (CCFloat) public score: number=0;\r\n    @property(CCFloat) public contadorMonedas:number=0;\r\n    @property(CCFloat) public contadorTarjetas:number=0;\r\n    @property (CCString) public tarjetaString:string=null;\r\n    @property (CCString) public monedasString:string=null;\r\n    @property(Label) monedas:Label=null;\r\n    @property(Label) tarjetas:Label=null;\r\n    @property(CCFloat) public colorID:number=0;\r\n    @property(CCFloat) public modeloID:number=0;\r\n    \r\n    /*\r\n    @property([CCFloat]) // Especifica que es un array de números flotantes\r\n    miCoche: number[][] = [[0, 0]];*/\r\n\r\n    protected onLoad(): void {\r\n        //sys.localStorage.clear();//Reset\r\n        \r\n        this.LoadData();\r\n        //this.CargaCoche();\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    start() {\r\n\r\n        \r\n    }\r\n\r\n    update(dt) \r\n    {\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    \r\n    Save()\r\n    {\r\n        //console.log(\"Save\");\r\n        sys.localStorage.setItem('score',this.score.toString());\r\n        sys.localStorage.setItem('monedas', this.contadorMonedas.toString());\r\n        sys.localStorage.setItem('tarjetas', this.contadorTarjetas.toString());\r\n\r\n        //////////////////////////POWER UPS/////////////////////////////////////\r\n        //sys.localStorage.setItem('iman', this.iman.toString());\r\n        //sys.localStorage.setItem('control', this.control.toString());\r\n    }\r\n\r\n    LoadData()\r\n    {\r\n        this.monedasString=sys.localStorage.getItem('monedas');\r\n        this.tarjetaString=sys.localStorage.getItem('tarjetas');\r\n        let imanP=sys.localStorage.getItem('iman');\r\n        let controlP=sys.localStorage.getItem('control');\r\n\r\n        /*\r\n        if(imanP)\r\n            {\r\n                this.iman=parseInt(imanP);\r\n            }\r\n        if(controlP)\r\n            {\r\n                this.control=parseInt(controlP);\r\n            }\r\n        */\r\n       /*\r\n        if(this.monedasString)\r\n            {\r\n                this.contadorMonedas=parseInt(this.monedasString);\r\n                \r\n            }\r\n        */\r\n        if(this.tarjetaString)\r\n            {\r\n                \r\n                this.contadorTarjetas=parseInt(this.tarjetaString);\r\n                if(this.contadorTarjetas==null)\r\n                {\r\n                    this.contadorTarjetas=0;\r\n                }\r\n            }\r\n    }\r\n\r\n    ActualizaCompras(valor:number, tipo: string)\r\n    {\r\n        switch(tipo)\r\n        {\r\n            case 'tarjeta':\r\n                this.contadorTarjetas-=valor;\r\n                break;\r\n            case 'moneda':\r\n                //this.contadorMonedas-=valor;\r\n                break;\r\n        }\r\n    }\r\n\r\n    CargaCoche()\r\n    {\r\n        /*var cocheString = sys.localStorage.getItem('coche');\r\n        if (cocheString)\r\n        {\r\n            var valores = cocheString.split(',');\r\n            this.colorID=parseInt(valores[0]);\r\n            this.modeloID=parseInt(valores[1]);\r\n            //this.miCoche=[[this.modeloID,this.colorID]];\r\n            console.log(\"cargandoCoche\");\r\n\r\n        }*/\r\n\r\n        var colorIDString=sys.localStorage.getItem('color');\r\n        var modeloIDString=sys.localStorage.getItem('modelo');\r\n\r\n        if(colorIDString)\r\n            {\r\n                this.colorID=parseInt(colorIDString);\r\n                \r\n            }\r\n        if(modeloIDString)\r\n            {\r\n                this.modeloID=parseInt(modeloIDString);\r\n\r\n            }\r\n\r\n        \r\n        \r\n        //console.log(\"cargaCoche\");\r\n        \r\n    }\r\n\r\n    SaveCoche()\r\n    {\r\n        \r\n        if (this.colorID !== undefined) {\r\n            sys.localStorage.setItem('color', this.colorID.toString());\r\n        } else {\r\n            console.warn(\"colorID está indefinido y no se pudo guardar.\");\r\n        }\r\n    \r\n        if (this.modeloID !== undefined) {\r\n            sys.localStorage.setItem('modelo', this.modeloID.toString());\r\n        } else {\r\n            console.warn(\"modeloID está indefinido y no se pudo guardar.\");\r\n        }\r\n    \r\n        console.log(\"guardaCoche\");\r\n        \r\n    }\r\n\r\n    CocheDesbloqueado(comprado: number, nombre: string)\r\n    {\r\n        sys.localStorage.setItem(nombre, comprado.toString());\r\n        //console.log(\"guarda meCompraron \"+ nombre);\r\n    }\r\n\r\n    CargaCocheDesbloqueado(nombre:string, compra: number)\r\n    {\r\n        var meCompraron=sys.localStorage.getItem(nombre);\r\n\r\n        if(meCompraron)\r\n            {\r\n                compra=parseInt(meCompraron);\r\n                console.log(\"meCompraron \"+ nombre);\r\n                \r\n            }\r\n\r\n            return compra;\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Camera, Component, Node, math, PhysicsSystem, geometry,Quat, Vec2, Vec3, EventTouch, input, Input, quat, Collider } from 'cc';\r\nimport { RotarPiezas } from './RotarPiezas';\r\nimport { SelladoPieza } from './SelladoPieza';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Raycast')\r\nexport class Raycast extends Component {\r\n\r\n    @property(Camera)\r\n    mainCamera : Camera = null;\r\n    @property(Vec3)\r\n    rotationAngle: Vec3 = new Vec3(0, 45, 0)\r\n    private rotateY : number;\r\n    private index : number = -1;\r\n    protected onLoad(): void {\r\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    start() {\r\n        \r\n\r\n    }\r\n    onTouchStart(event:EventTouch){\r\n        PhysicsSystem.instance.resetAccumulator();\r\n\r\n        const touch = event.getLocation();\r\n        const ray = new geometry.Ray();\r\n         // Generar el rayo desde la cámara y la posición del toque\r\n         this.mainCamera?.screenPointToRay(touch.x, touch.y, ray);\r\n\r\n         // Usar el sistema de física para verificar colisiones\r\n         if (PhysicsSystem.instance.raycast(ray)) {\r\n             const results = PhysicsSystem.instance.raycastResults;\r\n             for (let i = 0; i < results.length; i++) {\r\n                 const hit = results[i];\r\n                 const clickedNode: Node= hit.collider.node;\r\n                 //console.log(clickedNode.getComponent(Collider).getGroup().toString() + \"grupo de lo que tocaste\")\r\n                 if(clickedNode.getComponent(Collider).getGroup()==1 && !clickedNode.getComponent(SelladoPieza).Sellado){\r\n                    //console.log(\"Es la pieza\" + clickedNode.name);\r\n                    this.rotateNode(clickedNode)\r\n                 }\r\n                \r\n                  /*  if(clickedNode.parent.getComponent(SelladoPieza).Sellado){\r\n                        \r\n                    }\r\n                    else{\r\n                        console.log(\"rota pieza\")\r\n                        //clickedNode.parent;\r\n     \r\n                     // Aquí puedes agregar lo que quieres hacer cuando el objeto es clickeado\r\n                     console.log(\"Objeto clickeado:\", clickedNode.name);\r\n                     \r\n                     //this.rotapieza(clickedNode);\r\n                     this.rotateNode(clickedNode.parent)\r\n                    }*/\r\n                    \r\n                 \r\n                 \r\n             }\r\n         }\r\n\r\n    }\r\n    rotapieza(RotaPieza:Node){\r\n        const node = RotaPieza.parent;\r\n        this.rotateY += 90;\r\n        this.rotateY = Math.floor(this.rotateY);\r\n        if(this.rotateY >= 360){\r\n            this.rotateY = 0;\r\n        }    \r\n       \r\n        node.setRotationFromEuler(new Vec3(0, this.rotateY,0));\r\n    }\r\n    rotateNode(node: Node) {\r\n        // Convierte el ángulo a una rotación en cuaternión y aplícala\r\n       // if(node.name == \"ManagerMAp\")\r\n        const currentRotation = node.getRotation();\r\n        const additionalRotation = new Quat();\r\n        Quat.fromEuler(additionalRotation, this.rotationAngle.x, this.rotationAngle.y, this.rotationAngle.z);\r\n        const newRotation = new Quat();\r\n         math.Quat.multiply (newRotation, currentRotation, additionalRotation)\r\n\r\n        node.setRotation(newRotation);\r\n    }\r\n    onDestroy() {\r\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RemovePieza')\r\nexport class RemovePieza extends Component {\r\n    protected onLoad(): void {\r\n       \r\n    }\r\n    start() {\r\n\r\n    }\r\n    remove(){\r\n        this.scheduleOnce(function(){\r\n            this.node.destroy();\r\n        },15)\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Collider2D, find, Vec3, CCInteger, CCString, CCBoolean } from 'cc';\r\nimport { SpawnPiso } from './SpawnPiso';\r\nimport {Coche} from \"./Coche\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RotarPiezas')\r\nexport class RotarPiezas extends Component {\r\n    @property(Node)\r\n    public Spawn : Node = null; //asignar desde inspector\r\n    @property(Node)\r\n    public ultimaPieza : Node = null;\r\n    @property(CCBoolean)\r\n    public Muerto : boolean = false;\r\n    \r\n    private ultima : boolean = false;\r\n    @property(CCInteger)\r\n    public rotateY : number = 0;\r\n    @property(CCInteger)\r\n    public nombre : number = 0;\r\n    @property(CCInteger)\r\n    private tiempo : number = 0;\r\n    private index : number = 0;\r\n\r\n    protected onLoad(): void {\r\n        const node = find(\"coche\");\r\n        this.tiempo = node.getComponent(Coche).tiempoSpawn;\r\n       this.node.on(Node.EventType.TOUCH_START, this.ontouch, this)\r\n       this.node.on(Node.EventType.TOUCH_MOVE, this.ontouch, this)\r\n       this.node.on(Node.EventType.TOUCH_END, this.ontouchcancel, this)\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.ontouchcancel,this)\r\n        \r\n    }\r\n    ontouch(event: Touch){\r\n       \r\n        this.index +=1;\r\n        if(this.ultimaPieza!=null){\r\n           // console.log(\"rota \" + this.ultimaPieza)\r\n           this.rotateY = this.node.rotation.y + 90;\r\n                this.rotateY = Math.floor(this.rotateY);\r\n           /* switch(this.index){\r\n                case 0: \r\n                \r\n                break;\r\n                case 1:  this.rotateY = this.node.rotation.y + 90;\r\n                this.rotateY = Math.floor(this.rotateY);\r\n                break;\r\n                case 2:  this.rotateY = this.node.rotation.y + 90;\r\n                this.rotateY = Math.floor(this.rotateY);\r\n                break;\r\n                case 3:  this.rotateY = this.node.rotation.y + 90;\r\n                this.rotateY = Math.floor(this.rotateY);\r\n                this.index= 0;\r\n                break;\r\n            }*/\r\n           \r\n           \r\n            \r\n            this.ultimaPieza.setRotationFromEuler(new Vec3(0, this.rotateY,0))\r\n        }\r\n    }\r\n    ontouchcancel(event: Touch){\r\n\r\n    }\r\n   \r\n    cambiaultima(){\r\n        const node = find(\"coche\");\r\n        this.tiempo = node.getComponent(Coche).tiempoSpawn;\r\n        const numb = this.Spawn.getComponent(SpawnPiso).GameObjetc.length;\r\n        //console.log(\"el valor del arreglo es igual a \"+ numb.toString());\r\n        this.ultimaPieza = this.Spawn.getComponent(SpawnPiso).GameObjetc[numb-1];\r\n        this.rotateY = this.ultimaPieza.rotation.y;\r\n        this.ultima = false;\r\n       // console.log(\"Cambie algo\");\r\n    }\r\n    start() {\r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (!this.ultima && !this.Muerto) {\r\n            this.ultima = true;\r\n            this.scheduleOnce(function () {\r\n                this.cambiaultima();\r\n \r\n            }, this.tiempo);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, SpriteFrame, find, Sprite,Button } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SeleccionColor')\r\nexport class SeleccionColor extends Component {\r\n\r\n    @property([SpriteFrame]) amarillo: SpriteFrame[]=[];\r\n    @property([SpriteFrame]) azul: SpriteFrame[]=[];\r\n    @property([SpriteFrame]) verde: SpriteFrame[]=[];\r\n    @property([SpriteFrame]) rojo: SpriteFrame[]=[];\r\n    @property([SpriteFrame]) naranja: SpriteFrame[]=[];\r\n\r\n    @property([Node]) modelos: Node[]=[];\r\n\r\n\r\n    onLoad()\r\n    {\r\n        //this.modelos[0]= find(\"Canvas/Modelo01\");\r\n        //this.modelos[1]= find(\"Canvas/Modelo02\");\r\n        //this.modelos[2]= find(\"Canvas/Modelo03\");\r\n\r\n        this.modelos[0].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[1];\r\n    }\r\n\r\n    start() \r\n    {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    Colores(color:string)\r\n    {\r\n        if(this.modelos[0].active)\r\n            {\r\n                this.Seleccion(color,0);\r\n            }\r\n\r\n        if(this.modelos[1].active)\r\n            {\r\n                this.Seleccion(color,1);\r\n            }\r\n\r\n        if(this.modelos[2].active)\r\n            {\r\n                this.Seleccion(color,2);\r\n            }\r\n    }\r\n\r\n    Seleccion(color:string, modelo: number)\r\n    {\r\n        //console.log(\"cambio de color\");\r\n        switch(color)\r\n        {\r\n            case 'amarillo':\r\n                this.modelos[modelo].children[0].children[0].getComponent(Sprite).spriteFrame=this.amarillo[1];\r\n                if(this.modelos[modelo].children[0].children[1].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[1].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                if(this.modelos[modelo].children[0].children[2].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[2].getComponent(Sprite).spriteFrame=this.verde[0];\r\n                if(this.modelos[modelo].children[0].children[3].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[3].getComponent(Sprite).spriteFrame=this.rojo[0];\r\n                if(this.modelos[modelo].children[0].children[4].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[4].getComponent(Sprite).spriteFrame=this.naranja[0];\r\n                break;\r\n            case 'azul':\r\n                this.modelos[modelo].children[0].children[0].getComponent(Sprite).spriteFrame=this.amarillo[0];\r\n                if(this.modelos[modelo].children[0].children[1].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[1].getComponent(Sprite).spriteFrame=this.azul[1];\r\n                if(this.modelos[modelo].children[0].children[2].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[2].getComponent(Sprite).spriteFrame=this.verde[0];\r\n                if(this.modelos[modelo].children[0].children[3].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[3].getComponent(Sprite).spriteFrame=this.rojo[0];\r\n                if(this.modelos[modelo].children[0].children[4].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[4].getComponent(Sprite).spriteFrame=this.naranja[0];\r\n                break;\r\n            case 'verde':\r\n                this.modelos[modelo].children[0].children[0].getComponent(Sprite).spriteFrame=this.amarillo[0];\r\n                if(this.modelos[modelo].children[0].children[1].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[1].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                if(this.modelos[modelo].children[0].children[2].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[2].getComponent(Sprite).spriteFrame=this.verde[1];\r\n                if(this.modelos[modelo].children[0].children[3].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[3].getComponent(Sprite).spriteFrame=this.rojo[0];\r\n                if(this.modelos[modelo].children[0].children[4].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[4].getComponent(Sprite).spriteFrame=this.naranja[0];\r\n                break;\r\n            case 'rojo':\r\n                this.modelos[modelo].children[0].children[0].getComponent(Sprite).spriteFrame=this.amarillo[0];\r\n                if(this.modelos[modelo].children[0].children[1].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[1].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                if(this.modelos[modelo].children[0].children[2].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[2].getComponent(Sprite).spriteFrame=this.verde[0];\r\n                if(this.modelos[modelo].children[0].children[3].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[3].getComponent(Sprite).spriteFrame=this.rojo[1];\r\n                if(this.modelos[modelo].children[0].children[4].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[4].getComponent(Sprite).spriteFrame=this.naranja[0];\r\n                break;\r\n            case 'naranja':\r\n                this.modelos[modelo].children[0].children[0].getComponent(Sprite).spriteFrame=this.amarillo[0];\r\n                if(this.modelos[modelo].children[0].children[1].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[1].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                if(this.modelos[modelo].children[0].children[2].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[2].getComponent(Sprite).spriteFrame=this.verde[0];\r\n                if(this.modelos[modelo].children[0].children[3].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[3].getComponent(Sprite).spriteFrame=this.rojo[0];\r\n                if(this.modelos[modelo].children[0].children[4].getComponent(Button).normalSprite.name!=\"bloqueado\")\r\n                    this.modelos[modelo].children[0].children[4].getComponent(Sprite).spriteFrame=this.naranja[1];\r\n                break;\r\n        }\r\n    }\r\n\r\n    /*\r\n    MeSeleccionaron(modelo:number)\r\n    {\r\n        switch(modelo)\r\n        {\r\n            case 0:\r\n                this.modelos[0].children[0].children[0].getComponent(Button).pressedSprite;\r\n                this.modelos[0].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[1];\r\n                this.Seleccion('azul',1);\r\n                this.Seleccion('azul',2);\r\n                this.modelos[1].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                this.modelos[2].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                break;\r\n\r\n            case 1:\r\n                this.modelos[1].children[0].children[0].getComponent(Button).pressedSprite;\r\n                this.modelos[1].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[1];\r\n                this.Seleccion('azul',0);\r\n                this.Seleccion('azul',2);\r\n                this.modelos[0].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                this.modelos[2].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                break;\r\n\r\n            case 2:\r\n                this.modelos[2].children[0].children[0].getComponent(Button).pressedSprite;\r\n                this.modelos[2].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[1];\r\n                this.Seleccion('azul',0);\r\n                this.Seleccion('azul',1);\r\n                this.modelos[0].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                this.modelos[1].children[0].children[0].getComponent(Sprite).spriteFrame=this.azul[0];\r\n                break;\r\n        }\r\n        \r\n    }*/\r\n}\r\n\r\n\r\n","import { _decorator, CCBoolean, CCInteger, Component, Node } from 'cc';\r\nimport { RotarPiezas } from './RotarPiezas';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SelladoPieza')\r\nexport class SelladoPieza extends Component {\r\n    @property(CCBoolean)\r\n    public Sellado : boolean = false;\r\n    @property(CCInteger)\r\n    public IndexPieza : number = 0;\r\n    @property(CCBoolean)\r\n    public yaPaso : boolean = false;\r\n    @property(CCBoolean)\r\n    public Derecha : boolean = false;\r\n\r\n    protected onLoad(): void {\r\n        this.Sellado= false;\r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n    SellarPiezas(){\r\n        this.Sellado = true;\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Prefab, randomRangeInt, instantiate, Vec3, CCBoolean, CCInteger, find, CCFloat, Game, ParticleSystem } from 'cc';\r\nimport { Coche } from './Coche';\r\nimport { SelladoPieza } from './SelladoPieza';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SpawnPiso')\r\nexport class SpawnPiso extends Component {\r\n    @property([Prefab])\r\n    public prefab: Prefab[] = []; // Prefab para representar los Pisos del mapa\r\n    private creando: boolean = false;\r\n    private distanciax : number = 0;\r\n    @property(Node)\r\n    public GameObjetc:Node[] = [];\r\n    private distanciaz : number = 0;\r\n    @property(CCBoolean)\r\n    public derecha : boolean = false;\r\n    @property(CCBoolean)\r\n    public izquierda : boolean = false;\r\n    @property(CCInteger)\r\n    public valorMax : number = 3;\r\n    private PowerUp : boolean = false;\r\n    @property(CCInteger)\r\n    private LimiteH : number = 2;\r\n    @property(CCInteger)\r\n    private LimiteV : number = 2;\r\n    @property(CCInteger)\r\n    private horizontal : number = 0;\r\n    @property(CCInteger)\r\n    private vertical : number = 0;\r\n    @property(CCInteger)\r\n    private rotaty : number = 0 ;\r\n    @property(CCFloat)\r\n    public tiempo : number = 0;\r\n    @property(CCBoolean)\r\n    public Muerto : boolean = false;\r\n    @property(CCInteger)\r\n    public random : number = 0;\r\n    @property(CCInteger)\r\n    private index : number = 0;\r\n    private indexPiezasOrdenar = 0;\r\n    private coche : Node = null;\r\n    \r\n    \r\n    protected onLoad(): void {\r\n        this.vertical = 3;\r\n        this.coche = find(\"COCHEa\");\r\n        //this.tiempo = node.getComponent(Coche).tiempoSpawn;\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n    Power( i : number){\r\n        this.PowerUp = true;\r\n        //this.valorMax = 1;\r\n        this.indexPiezasOrdenar = i\r\n    }\r\n    asignaindex( pieza: Node, i : number){\r\n        pieza.getComponent(SelladoPieza).IndexPieza = i;\r\n    }\r\n    crea() {\r\n       // const node = find(\"coche\");\r\n        //this.tiempo = node.getComponent(Coche).tiempoSpawn;\r\n        if(this.izquierda || this.derecha){\r\n\r\n            if(this.derecha ){\r\n                this.distanciaz -=8;\r\n                const camino : number = randomRangeInt(1,3);\r\n                switch(camino){\r\n                    case 1:\r\n                        //seguir el camino en horizontal\r\n                        this.horizontal+=1;\r\n                        if(this.horizontal > this.LimiteH){\r\n                            const node2 = instantiate(this.prefab[4]);\r\n                           node2.parent = this.node;\r\n                           node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node2);\r\n                           \r\n                            this.creando = false;\r\n                           this.derecha=false;\r\n                           this.GameObjetc.push(node2);\r\n                          \r\n                           break;\r\n                        }\r\n                        \r\n                        const node1 = instantiate(this.prefab[3]);\r\n                           node1.parent = this.node;\r\n                           node1.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node1);\r\n                          \r\n                            this.creando = false;\r\n                           this.GameObjetc.push(node1);\r\n                        break;\r\n                    case 2:\r\n                        //vuelta izq\r\n                        \r\n                        const node2 = instantiate(this.prefab[4]);\r\n                           node2.parent = this.node;\r\n                           node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node2);\r\n                           \r\n                            this.creando = false;\r\n                           this.derecha=false;\r\n                           this.GameObjetc.push(node2);\r\n                           \r\n                           \r\n                        break;\r\n                       \r\n                }\r\n            }\r\n            else{\r\n                this,this.distanciaz +=8;\r\n                const camino : number = randomRangeInt(1,3);\r\n                switch(camino){\r\n                    case 1:\r\n                        //seguir el camino horizontal a la izquierda\r\n                        this.horizontal+=1;\r\n                        if(this.horizontal > this.LimiteH){\r\n                            const node2 = instantiate(this.prefab[5]);\r\n                           node2.parent = this.node;\r\n                           node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node2);\r\n                            \r\n                            this.creando = false;\r\n                           this.izquierda=false;\r\n                           this.GameObjetc.push(node2)\r\n                           break;\r\n                        }\r\n                        const node1 = instantiate(this.prefab[3]);\r\n                           node1.parent = this.node;\r\n                           node1.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node1);\r\n                           node1.getComponent(SelladoPieza).Derecha = true;\r\n                            this.creando = false;\r\n                           this.GameObjetc.push(node1);\r\n                        break;\r\n                    case 2:\r\n                        //vuelta izq\r\n                        const node2 = instantiate(this.prefab[5]);\r\n                           node2.parent = this.node;\r\n                           node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                           this.RotaRandomPieza(node2);\r\n                            \r\n                            this.creando = false;\r\n                           this.izquierda=false;\r\n                           this.GameObjetc.push(node2);\r\n                           \r\n                        break;\r\n                       \r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        else{\r\n            this.horizontal =0;\r\n            \r\n            this.distanciax -=8;\r\n            const Inst:number = randomRangeInt(1,this.valorMax);         \r\n            switch(Inst){\r\n                case 1:\r\n                   //vertcial\r\n                   this.vertical+=1;\r\n                   if(this.vertical >= this.LimiteV){\r\n                        let opcion = randomRangeInt(1,3)\r\n                        switch(opcion){\r\n                            case 1:\r\n                            const node2 = instantiate(this.prefab[1]);\r\n                            node2.parent = this.node;\r\n                            node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                            const randomd : number = randomRangeInt(2,4);\r\n                       \r\n                            this.RotaRandomPieza(node2);\r\n                            \r\n                            this.creando = false;\r\n                            this.derecha = true;\r\n                            this.GameObjetc.push(node2);\r\n                            this.vertical=0;\r\n                            break;\r\n                    case 2:\r\n                        const node3 = instantiate(this.prefab[2]);\r\n                       node3.parent = this.node;\r\n                       node3.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                      this.RotaRandomPieza(node3);\r\n                       \r\n                       this.creando = false;\r\n                       this.izquierda=true;\r\n                       this.GameObjetc.push(node3);\r\n                       this.vertical=0;\r\n                       break;\r\n\r\n                    }\r\n\r\n                   }\r\n                   else{\r\n                    const node1 = instantiate(this.prefab[0]);\r\n                    node1.parent = this.node;\r\n                    node1.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                    this.RotaRandomPieza(node1);\r\n                    this.creando = false;\r\n                    this.GameObjetc.push(node1);\r\n                   }\r\n                       \r\n                   \r\n                    break;\r\n                    case 2:\r\n                       //Derecha\r\n                       this.vertical=0;\r\n                       const node2 = instantiate(this.prefab[1]);\r\n                       node2.parent = this.node;\r\n                       node2.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                      this.RotaRandomPieza(node2);\r\n                       \r\n                       this.creando = false;\r\n                       this.derecha = true;\r\n                       this.GameObjetc.push(node2);\r\n                       break;\r\n                   case 3:\r\n                       //IZQ\r\n                       this.vertical=0;\r\n                       const node3 = instantiate(this.prefab[2]);\r\n                       node3.parent = this.node;\r\n                       node3.setPosition(new Vec3(this.distanciax, 0, this.distanciaz));\r\n                      \r\n                       this.RotaRandomPieza(node3);\r\n                       this.creando = false;\r\n                       this.izquierda=true;\r\n                       this.GameObjetc.push(node3);\r\n                       break;\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n    ordenaPiezas(ind: number){\r\n        console.log(\"Ordena desde la pieza \" + ind.toString());\r\n        let max : number = ind +4;\r\n        this.coche.getComponent(Coche).Score += 4;\r\n        this.coche.getComponent(Coche).ScoreText.string= this.coche.getComponent(Coche).Score.toString();\r\n        const inicio : number = ind+1;\r\n        if(max> this.GameObjetc.length){\r\n            max = this.GameObjetc.length;\r\n        }\r\n        for(let i = inicio; i < max; i++ ){\r\n            console.log(\"Estoy entrando aqui??\" + i.toString());\r\n            this.GameObjetc[i].setRotationFromEuler(new Vec3(0,0,0));\r\n            this.GameObjetc[i].getChildByName(\"Particulas\").getComponent(ParticleSystem).play();\r\n            this.GameObjetc[i].getComponent(SelladoPieza).Sellado=true;\r\n            this.GameObjetc[i].getComponent(SelladoPieza).yaPaso = true;\r\n        }\r\n        \r\n    }\r\n    RotaRandomPieza(Pieza : Node){\r\n        \r\n        this.asignaindex(Pieza, this.index);\r\n        this.index +=1;\r\n        this.random= randomRangeInt(2,4);\r\n       // this.random = 1;\r\n        switch(this.random){\r\n            case 1:\r\n                this.rotaty = 0;\r\n            break;\r\n            case 2: \r\n                this.rotaty = 90;\r\n            break;\r\n            case 3:\r\n                this.rotaty=180;\r\n            break;\r\n\r\n        }\r\n        Pieza.setRotationFromEuler(new Vec3(0,this.rotaty,0))\r\n    }\r\n    update(deltaTime: number) {\r\n        if (!this.creando && !this.Muerto ) {\r\n            this.creando = true;\r\n            this.scheduleOnce(function () {\r\n                this.crea();\r\n \r\n            }, this.tiempo);\r\n        }\r\n        if(this.PowerUp){\r\n            this.PowerUp = false;\r\n            this.ordenaPiezas(this.indexPiezasOrdenar);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}