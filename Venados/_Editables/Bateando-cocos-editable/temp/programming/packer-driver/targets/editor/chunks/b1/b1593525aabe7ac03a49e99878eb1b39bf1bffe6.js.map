{"version":3,"sources":["file:///Users/fldsmdfr/Documents/GitHub/Blue_Games/Venados/_Editables/Bateando-cocos-editable/assets/scripts/BateosCtrl.ts"],"names":["_decorator","Component","Label","director","SceneRouter","ccclass","property","BateosCtrl","currentBateos","currentScore","start","updateBateosDisplay","on","onAddScore","onSubtractScore","onScoreAdd","onScoreSubtract","onDestroy","off","points","triggerGameOver","console","log","bateosLabel","string","toString","globalThis","finalScore","emit","sceneRouter","go","warn","loadScene","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, director } from 'cc';\nimport { SceneRouter } from './SceneRouter';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BateosCtrl')\nexport class BateosCtrl extends Component {\n    @property(Label) bateosLabel!: Label;\n    @property(SceneRouter) sceneRouter!: SceneRouter;\n    \n    private currentBateos: number = 100;\n    private currentScore: number = 0;\n\n    start() {\n        // Initialize bateos display\n        this.updateBateosDisplay();\n        \n        // Listen to score and bateos events\n        director.on('add-bateo', this.onAddScore, this);\n        director.on('subtract-bateo', this.onSubtractScore, this);\n        \n        // Listen to score events to track current score for game over\n        director.on('add-score', this.onScoreAdd, this);\n        director.on('subtract-score', this.onScoreSubtract, this);\n    }\n\n    onDestroy() {\n        // Clean up event listeners\n        director.off('add-bateo', this.onAddScore, this);\n        director.off('subtract-bateo', this.onSubtractScore, this);\n        director.off('add-score', this.onScoreAdd, this);\n        director.off('subtract-score', this.onScoreSubtract, this);\n    }\n\n    private onAddScore(points: number): void {\n        // Add points to bateos (positive events increase bateos)\n        this.currentBateos += points;\n        this.updateBateosDisplay();\n        //console.log(`üéØ Bateos increased by ${points}. Current: ${this.currentBateos}`);\n    }\n\n    private onSubtractScore(points: number): void {\n        // Subtract points from bateos (negative events decrease bateos)\n        this.currentBateos -= points;\n        \n        // Prevent going below 0\n        if (this.currentBateos <= 0) {\n            this.currentBateos = 0;\n            this.updateBateosDisplay();\n            this.triggerGameOver();\n        } else {\n            this.updateBateosDisplay();\n        }\n        \n        //console.log(`üí• Bateos decreased by ${points}. Current: ${this.currentBateos}`);\n    }\n\n    private onScoreAdd(points: number): void {\n        this.currentScore += points;\n        console.log(`üìà Score increased by ${points}. Current score: ${this.currentScore}`);\n    }\n\n    private onScoreSubtract(points: number): void {\n        this.currentScore -= points;\n        if (this.currentScore < 0) this.currentScore = 0; // Prevent negative score\n        console.log(`üìâ Score decreased by ${points}. Current score: ${this.currentScore}`);\n    }\n\n    private updateBateosDisplay(): void {\n        if (this.bateosLabel) {\n            this.bateosLabel.string = this.currentBateos.toString();\n        }\n    }\n\n    private async triggerGameOver(): Promise<void> {\n        console.log('üéÆ GAME OVER! Bateos reached 0');\n        console.log(`Final Score: ${this.currentScore}`);\n        \n        // Store the final score globally so it persists across scenes\n        (globalThis as any).finalScore = this.currentScore;\n        console.log(`üíæ Stored final score globally: ${this.currentScore}`);\n        \n        // Also emit the event (in case the scene is already loaded)\n        director.emit('set-final-score', this.currentScore);\n        \n        // Navigate to game over scene\n        if (this.sceneRouter) {\n            await this.sceneRouter.go('30-gameover');\n        } else {\n            console.warn('‚ö†Ô∏è SceneRouter not assigned! Cannot navigate to game over scene.');\n            // Fallback: direct scene load\n            director.loadScene('30-gameover');\n        }\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}