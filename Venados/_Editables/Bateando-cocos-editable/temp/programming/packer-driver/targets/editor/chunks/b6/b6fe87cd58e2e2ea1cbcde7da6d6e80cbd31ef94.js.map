{"version":3,"sources":["file:///Users/fldsmdfr/Documents/GitHub/Blue_Games/Venados/_Editables/Bateando/assets/scripts/BatterAi.ts"],"names":["_decorator","Component","Node","math","Vec3","UITransform","BallController","ccclass","property","BatterAI","tooltip","timer","nextSwingAt","swingTimeoutId","start","setTimeout","planNext","batSwing","active","update","dt","ball","isIdle","doSwingOnce","r","swingIntervalRange","randomRange","x","y","strikeZone","console","error","t","getComponent","w","width","h","height","rx","ry","setPosition","clearTimeout","hideSwing","swingDuration","onDestroy","Vec2"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, math, Vec3, UITransform } from 'cc';\nimport { BallController } from './BallCtrl';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BatterAI')\nexport class BatterAI extends Component {\n  @property(Node) batSwing!: Node; // BoxCollider2D sensor\n  @property(BallController) ball!: BallController;\n  @property(Node) strikeZone!: Node; // un Node referencia (rect) donde puede aparecer el bat\n\n  @property({tooltip:'cada cuántos seg. intenta swing (rango min-max)'})\n  swingIntervalRange: math.Vec2 = new math.Vec2(0.45, 0.9);\n\n  @property({tooltip:'duración visible del swing en seg.'})\n  swingDuration: number = 0.12;\n\n  private timer = 0;\n  private nextSwingAt = 0.5;\n  private swingTimeoutId: any = null;\n\n  protected start() {\n    // Use setTimeout as fallback due to TypeScript config issues\n    setTimeout(() => this.planNext(), 100);\n    if (this.batSwing) {\n      this.batSwing.active = false;\n    }\n  }\n\n  protected update(dt: number) {\n    // Safety check for ball reference\n    if (!this.ball || this.ball.isIdle()) return;\n    \n    this.timer += dt;\n    if (this.timer >= this.nextSwingAt) {\n      this.doSwingOnce();\n      this.planNext();\n    }\n  }\n\n  private planNext(): void {\n    this.timer = 0;\n    const r = this.swingIntervalRange;\n    this.nextSwingAt = math.randomRange(r.x, r.y);\n  }\n\n  private doSwingOnce(): void {\n    // Safety checks\n    if (!this.strikeZone || !this.batSwing) {\n      console.error('Missing required components: strikeZone or batSwing');\n      return;\n    }\n\n    // posicion aleatoria dentro del rect del strikeZone\n    const t = this.strikeZone.getComponent(UITransform);\n    if (!t) {\n      console.error('UITransform component not found on strikeZone');\n      return;\n    }\n    \n    const w = t.width * 0.4;  // más estrecho que el rect total\n    const h = t.height * 0.4;\n    const rx = math.randomRange(-w/2, w/2);\n    const ry = math.randomRange(-h/2, h/2);\n\n    this.batSwing.setPosition(new Vec3(rx, ry, 0));\n    this.batSwing.active = true;\n    \n    // Clear any previous timeout\n    if (this.swingTimeoutId) {\n      clearTimeout(this.swingTimeoutId);\n    }\n    \n    // Schedule swing to hide after duration\n    this.swingTimeoutId = setTimeout(() => this.hideSwing(), this.swingDuration * 1000);\n  }\n\n  private hideSwing(): void {\n    if (this.batSwing) {\n      this.batSwing.active = false;\n    }\n    this.swingTimeoutId = null;\n  }\n\n  protected onDestroy(): void {\n    // Clean up any scheduled callbacks\n    if (this.swingTimeoutId) {\n      clearTimeout(this.swingTimeoutId);\n      this.swingTimeoutId = null;\n    }\n  }\n}"]}