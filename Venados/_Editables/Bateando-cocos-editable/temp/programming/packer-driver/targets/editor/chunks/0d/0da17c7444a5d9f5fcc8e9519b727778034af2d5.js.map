{"version":3,"sources":["file:///Users/fldsmdfr/Documents/GitHub/Blue_Games/Venados/_Editables/Bateando-cocos-editable/assets/scripts/FinalScoreCtrl.ts"],"names":["_decorator","Component","Node","Label","director","Input","SceneRouter","ccclass","property","FinalScoreCtrl","start","on","onSetFinalScore","storedScore","globalThis","finalScore","undefined","console","log","displayScore","sendScoreToParent","scoreLabel","string","setupButtons","onDestroy","off","score","window","parent","postMessage","error","toString","btnVolver","EventType","TOUCH_START","onVolverClick","warn","btnSalir","onSalirClick","state","sceneRouter","go","loadScene","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;;AAC9CC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;gCAGjBS,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACL,KAAD,C,UACRK,QAAQ,CAACN,IAAD,C,UACRM,QAAQ,CAACN,IAAD,C,UACRM,QAAQ;AAAA;AAAA,qC,2BALb,MACaC,cADb,SACoCR,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAM1CS,QAAAA,KAAK,GAAG;AACJ;AACAN,UAAAA,QAAQ,CAACO,EAAT,CAAY,iBAAZ,EAA+B,KAAKC,eAApC,EAAqD,IAArD,EAFI,CAIJ;;AACA,gBAAMC,WAAW,GAAIC,UAAD,CAAoBC,UAAxC;;AACA,cAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC3BC,YAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BL,WAAY,EAAxD;AACA,iBAAKM,YAAL,CAAkBN,WAAlB;AACA,iBAAKO,iBAAL,CAAuBP,WAAvB,EAH2B,CAK3B;;AACA,mBAAQC,UAAD,CAAoBC,UAA3B;AACH,WAPD,MAOO;AACH;AACA,gBAAI,KAAKM,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgBC,MAAhB,GAAyB,GAAzB;AACH;AACJ,WAlBG,CAoBJ;;;AACA,eAAKC,YAAL,GArBI,CAuBJ;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR;AACApB,UAAAA,QAAQ,CAACqB,GAAT,CAAa,iBAAb,EAAgC,KAAKb,eAArC,EAAsD,IAAtD;AACH;;AAEOA,QAAAA,eAAe,CAACG,UAAD,EAA2B;AAC9CE,UAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCH,UAAW,EAA7D;AACA,eAAKI,YAAL,CAAkBJ,UAAlB;AACA,eAAKK,iBAAL,CAAuBL,UAAvB;AACH;;AAEOK,QAAAA,iBAAiB,CAACM,KAAD,EAAsB;AAC3CT,UAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BQ,KAAM,EAAlD;;AAEA,cAAI;AACAC,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B;AAAEH,cAAAA,KAAK,EAAEA;AAAT,aAA1B,EAA4C,GAA5C;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAa,6CAA4CQ,KAAM,GAA/D;AACH,WAHD,CAGE,OAAOI,KAAP,EAAc;AACZb,YAAAA,OAAO,CAACa,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ;;AAEOX,QAAAA,YAAY,CAACO,KAAD,EAAsB;AACtC,cAAI,KAAKL,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBC,MAAhB,GAAyBI,KAAK,CAACK,QAAN,EAAzB,CADiB,CAEjB;AACH,WAHD,MAGO,CACH;AACH;AACJ;;AAEOR,QAAAA,YAAY,GAAS;AACzB;AACA,cAAI,KAAKS,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAerB,EAAf,CAAkBN,KAAK,CAAC4B,SAAN,CAAgBC,WAAlC,EAA+C,KAAKC,aAApD,EAAmE,IAAnE,EADgB,CAEhB;AACH,WAHD,MAGO;AACHlB,YAAAA,OAAO,CAACmB,IAAR,CAAa,8CAAb;AACH,WAPwB,CASzB;;;AACA,cAAI,KAAKC,QAAT,EAAmB;AACf,iBAAKA,QAAL,CAAc1B,EAAd,CAAiBN,KAAK,CAAC4B,SAAN,CAAgBC,WAAjC,EAA8C,KAAKI,YAAnD,EAAiE,IAAjE,EADe,CAEf;AACH,WAHD,MAGO;AACHrB,YAAAA,OAAO,CAACmB,IAAR,CAAa,6CAAb;AACH;AACJ;;AAE0B,cAAbD,aAAa,GAAkB;AACzC;AAEA;AACA,cAAIR,MAAM,CAACC,MAAX,EAAmB;AACfD,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B;AAAEU,cAAAA,KAAK,EAAE;AAAT,aAA1B,EAA8C,GAA9C;AACH,WANwC,CAQzC;;;AACA,cAAI,KAAKC,WAAT,EAAsB;AAClB,kBAAM,KAAKA,WAAL,CAAiBC,EAAjB,CAAoB,UAApB,CAAN;AACH,WAFD,MAEO;AACHrC,YAAAA,QAAQ,CAACsC,SAAT,CAAmB,UAAnB;AACH;AACJ;;AAEOJ,QAAAA,YAAY,GAAS;AACzB;AACA,cAAIX,MAAM,CAACC,MAAX,EAAmB;AACfD,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B;AAAEU,cAAAA,KAAK,EAAE;AAAT,aAA1B,EAA6C,GAA7C;AAEH;AACJ;;AAEDI,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3GyC,O","sourcesContent":["import { _decorator, Component, Node, Label, director, Input } from 'cc';\nimport { SceneRouter } from './SceneRouter';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FinalScoreCtrl')\nexport class FinalScoreCtrl extends Component {\n    @property(Label) scoreLabel!: Label;\n    @property(Node) btnVolver!: Node;\n    @property(Node) btnSalir!: Node;\n    @property(SceneRouter) sceneRouter!: SceneRouter;\n    \n    start() {\n        // Listen for the final score event from BateosCtrl\n        director.on('set-final-score', this.onSetFinalScore, this);\n        \n        // Check if there's a stored final score from the previous scene\n        const storedScore = (globalThis as any).finalScore;\n        if (storedScore !== undefined) {\n            console.log(`üîÑ Found stored final score: ${storedScore}`);\n            this.displayScore(storedScore);\n            this.sendScoreToParent(storedScore);\n            \n            // Clean up the global storage\n            delete (globalThis as any).finalScore;\n        } else {\n            // Initialize with default text\n            if (this.scoreLabel) {\n                this.scoreLabel.string = '0';\n            }\n        }\n        \n        // Setup button event listeners\n        this.setupButtons();\n        \n        //console.log('üèÜ FinalScoreCtrl initialized, waiting for score...');\n    }\n\n    onDestroy() {\n        // Clean up event listener\n        director.off('set-final-score', this.onSetFinalScore, this);\n    }\n\n    private onSetFinalScore(finalScore: number): void {\n        console.log(`üèÜ Final Score received via event: ${finalScore}`);\n        this.displayScore(finalScore);\n        this.sendScoreToParent(finalScore);\n    }\n\n    private sendScoreToParent(score: number): void {\n        console.log(`üöÄ Attempting to send score: ${score}`);\n        \n        try {\n            window.parent.postMessage({ score: score }, '*');\n            console.log(`üì® PostMessage sent successfully: {score: ${score}}`);\n        } catch (error) {\n            console.error('‚ùå Error sending postMessage:', error);\n        }\n    }\n\n    private displayScore(score: number): void {\n        if (this.scoreLabel) {\n            this.scoreLabel.string = score.toString();\n            //console.log(`üì± Score label updated to: ${score}`);\n        } else {\n            //console.warn('‚ö†Ô∏è Score label not assigned to FinalScoreCtrl!');\n        }\n    }\n\n    private setupButtons(): void {\n        // Setup \"Volver\" sprite (return to splash screen)\n        if (this.btnVolver) {\n            this.btnVolver.on(Input.EventType.TOUCH_START, this.onVolverClick, this);\n            //console.log('üîÑ Volver sprite event listener added');\n        } else {\n            console.warn('‚ö†Ô∏è btnVolver not assigned to FinalScoreCtrl!');\n        }\n\n        // Setup \"Salir\" sprite (exit game)\n        if (this.btnSalir) {\n            this.btnSalir.on(Input.EventType.TOUCH_START, this.onSalirClick, this);\n            //console.log('üö™ Salir sprite event listener added');\n        } else {\n            console.warn('‚ö†Ô∏è btnSalir not assigned to FinalScoreCtrl!');\n        }\n    }\n\n    private async onVolverClick(): Promise<void> {\n        //console.log('üîÑ Volver button clicked - returning to splash screen');\n        \n        // Send postMessage to parent\n        if (window.parent) {\n            window.parent.postMessage({ state: \"reset\" }, '*');\n        }\n        \n        // Navigate to splash scene\n        if (this.sceneRouter) {\n            await this.sceneRouter.go('0-splash');\n        } else {\n            director.loadScene('0-splash');\n        }\n    }\n\n    private onSalirClick(): void {        \n        // Send postMessage to parent\n        if (window.parent) {\n            window.parent.postMessage({ state: \"exit\" }, '*');\n\n        }\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}