{"version":3,"sources":["file:///Users/fldsmdfr/Documents/GitHub/Blue_Games/Venados/_Editables/Bateando/assets/scripts/FinalScoreCtrl.ts"],"names":["_decorator","Component","Node","Label","director","Input","SceneRouter","ccclass","property","FinalScoreCtrl","start","on","onSetFinalScore","storedScore","globalThis","finalScore","undefined","console","log","displayScore","scoreLabel","string","setupButtons","onDestroy","off","window","parent","postMessage","score","toString","warn","btnVolver","EventType","TOUCH_START","onVolverClick","btnSalir","onSalirClick","status","sceneRouter","go","loadScene","state","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, director, Input } from 'cc';\nimport { SceneRouter } from './SceneRouter';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FinalScoreCtrl')\nexport class FinalScoreCtrl extends Component {\n    @property(Label) scoreLabel!: Label;\n    @property(Node) btnVolver!: Node;\n    @property(Node) btnSalir!: Node;\n    @property(SceneRouter) sceneRouter!: SceneRouter;\n    \n    start() {\n        // Listen for the final score event from BateosCtrl\n        director.on('set-final-score', this.onSetFinalScore, this);\n        \n        // Check if there's a stored final score from the previous scene\n        const storedScore = (globalThis as any).finalScore;\n        if (storedScore !== undefined) {\n            console.log(`üîÑ Found stored final score: ${storedScore}`);\n            this.displayScore(storedScore);\n            // Clean up the global storage\n            delete (globalThis as any).finalScore;\n        } else {\n            // Initialize with default text\n            if (this.scoreLabel) {\n                this.scoreLabel.string = '0';\n            }\n        }\n        \n        // Setup button event listeners\n        this.setupButtons();\n        \n        console.log('üèÜ FinalScoreCtrl initialized, waiting for score...');\n    }\n\n    onDestroy() {\n        // Clean up event listener\n        director.off('set-final-score', this.onSetFinalScore, this);\n    }\n\n    private onSetFinalScore(finalScore: number): void {\n        console.log(`üèÜ Final Score received via event: ${finalScore}`);\n        this.displayScore(finalScore);\n\n        window.parent.postMessage({ score: finalScore }, '*');\n\n    }\n\n    private displayScore(score: number): void {\n        if (this.scoreLabel) {\n            this.scoreLabel.string = score.toString();\n            console.log(`üì± Score label updated to: ${score}`);\n        } else {\n            console.warn('‚ö†Ô∏è Score label not assigned to FinalScoreCtrl!');\n        }\n    }\n\n    private setupButtons(): void {\n        // Setup \"Volver\" sprite (return to splash screen)\n        if (this.btnVolver) {\n            this.btnVolver.on(Input.EventType.TOUCH_START, this.onVolverClick, this);\n            console.log('üîÑ Volver sprite event listener added');\n        } else {\n            console.warn('‚ö†Ô∏è btnVolver not assigned to FinalScoreCtrl!');\n        }\n\n        // Setup \"Salir\" sprite (exit game)\n        if (this.btnSalir) {\n            this.btnSalir.on(Input.EventType.TOUCH_START, this.onSalirClick, this);\n            console.log('üö™ Salir sprite event listener added');\n        } else {\n            console.warn('‚ö†Ô∏è btnSalir not assigned to FinalScoreCtrl!');\n        }\n    }\n\n    private async onVolverClick(): Promise<void> {\n        console.log('üîÑ Volver button clicked - returning to splash screen');\n        \n        // Send postMessage to parent\n        if (window.parent) {\n            window.parent.postMessage({ status: \"reset\" }, '*');\n            console.log('üì® PostMessage sent to parent: {status:\"reset\"}');\n        }\n        \n        // Navigate to splash scene\n        if (this.sceneRouter) {\n            await this.sceneRouter.go('0-splash');\n        } else {\n            console.warn('‚ö†Ô∏è SceneRouter not assigned! Using direct scene load.');\n            director.loadScene('0-splash');\n        }\n    }\n\n    private onSalirClick(): void {\n        console.log('üö™ Salir button clicked - exiting game');\n        \n        // Send postMessage to parent\n        if (window.parent) {\n            window.parent.postMessage({ state: \"exit\" }, '*');\n            console.log('üì® PostMessage sent to parent: {state:\"exit\"}');\n        }\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}