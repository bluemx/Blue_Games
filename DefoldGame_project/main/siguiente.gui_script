function init(self)
	msg.post(".", "acquire_input_focus") -- <1>
	msg.post("proxy:/controller#instrucciones", "set_time_step", {factor = 0, mode = 0})
	--msg.post("instrucciones:/bolsains#bolsaParticle", "ocultar_objeto")
	-- script_otro.script (otro script que llama a la funci√≥n)

end
function on_message(self, message_id, message, sender)
	if message_id == hash("listo") then
		msg.post("proxy:/controller#controller", "show_juego") -- <4>
	end
end


	


function on_input(self, action_id, action)
	local button = gui.get_node("boton")
	if action_id == hash("touch") and action.released then -- <2>
		if gui.pick_node(button, action.x, action.y) then -- <3>
			gui.set_texture(button, "BotonSiguiente")
			gui.play_flipbook(button, "BotonessiguienteP")
			local gui_node = gui.get_node("instrucciones")
			gui.set_enabled(gui_node, false)

			
			msg.post("instrucciones:/bolsains#bolsains","mueve")
					
		


			
			msg.post("proxy:/controller#instrucciones", "set_time_step", {factor = .6, mode = 1})
			msg.post("instrucciones:/bolsains#bolsains", "ocultar_objeto")
			--msg.post("proxy:/controller#controller", "show_juego") -- <4>

		end
	end

	if action_id == nil then --<5>
		if gui.pick_node(button, action.x, action.y) then -- <6>
			if not is_over then
				gui.set_texture(button, "BotonSiguiente")
				gui.play_flipbook(button, "BotonessiguienteH")
				self.is_over = true
			end
		else
			if self.is_over then
				gui.set_texture(button, "BotonSiguiente")
				gui.play_flipbook(button, "Botonessiguiente")
				self.is_over = false
			end
		end
	end
end
function update(self, dt)
	--script_corutina.actualizar_corutina()
end